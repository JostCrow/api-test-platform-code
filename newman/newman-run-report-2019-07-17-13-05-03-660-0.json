{
  "collection": {
    "_": {
      "postman_id": "530deb8d-e50f-4554-8e63-c499bff26d8e"
    },
    "item": [
      {
        "id": "c6f95f7e-955f-423b-b045-9b640dae6256",
        "name": "part1",
        "item": [
          {
            "_": {
              "postman_isSubFolder": true
            },
            "id": "94120dfe-d051-462c-a1cf-5f5b527da983",
            "name": "d",
            "item": [
              {
                "id": "de44697a-aa32-403c-a5e0-907e3aea5f3d",
                "name": "test",
                "request": {
                  "url": {
                    "host": [
                      "tesst subsub"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {
                    "mode": "raw",
                    "raw": ""
                  }
                },
                "response": [],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c18afe39-b175-4ff4-93e1-113adb8e1592",
            "name": "Create a quote",
            "request": {
              "url": {
                "path": [
                  "quotes"
                ],
                "host": [
                  "{{demo-api}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "name": "Content-Type",
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n    \"tekst\": \"To be or to be\",\n    \"bronNaam\": \"Shakespeare 3\",\n    \"bronLink\": \"http://citation.org\"\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b01fe77f-681c-4107-bcaa-bb42450d2bcd",
                  "type": "text/javascript",
                  "exec": [
                    "var quote = pm.response.json();",
                    "pm.globals.set(\"quote\", quote.url );  ",
                    "",
                    "pm.test(\"Successful POST request\", function () {",
                    "    pm.expect(pm.response.code).to.be.oneOf([201]);",
                    "});",
                    ""
                  ],
                  "_lastExecutionId": "99f3c35d-50b4-414c-b620-bfbfbf27a2a4"
                }
              }
            ]
          },
          {
            "id": "eac471a6-6bf5-4ee1-b9ce-cf141cd13cd7",
            "name": "Vraag alle quotes op",
            "request": {
              "url": {
                "path": [
                  "quotes"
                ],
                "host": [
                  "{{demo-api}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "59ec48c9-65be-4364-b07e-e999c439b77a",
                  "type": "text/javascript",
                  "exec": [
                    "//var quotes = pm.response.json();",
                    "//pm.globals.set(\"eerste_quote\", quotes.results[0].url );  //eerste quote uit de lijst",
                    "",
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});"
                  ],
                  "_lastExecutionId": "7a5fb806-86a2-410a-8b2f-09621d6a7c98"
                }
              }
            ]
          },
          {
            "id": "04d35071-ba57-4f04-acf1-d08375c8f150",
            "name": "Vraag een specifieke quote op",
            "request": {
              "url": {
                "host": [
                  "{{quote}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "c4265920-3b31-4cd4-877e-59223d3c3137",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});"
                  ],
                  "_lastExecutionId": "a09b5aff-5db5-4282-851f-d0d45810bfaa"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "bb89aa33-7534-432d-98c6-667a60f8f22f",
        "name": "part2",
        "item": [
          {
            "id": "024b2821-921f-4726-a262-75468980ac42",
            "name": "Vervang quote in zijn geheel",
            "request": {
              "url": {
                "host": [
                  "{{quote}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "name": "Content-Type",
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "PUT",
              "body": {
                "mode": "raw",
                "raw": "{\n    \"tekst\": \"Deze quote totaal vervangen\",\n    \"bronNaam\": \"Henri Korver\",\n    \"bronLink\": \"http://example.com\"\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "95b15424-0a25-4fb7-b15e-569ddf411356",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Successful PUT  request\", function () {",
                    "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                    "});",
                    "pm.test(\"Body matches string\", function () {",
                    "    pm.expect(pm.response.text()).to.include(\"Deze quote totaal vervange\");",
                    "});"
                  ],
                  "_lastExecutionId": "6b93167e-6ae2-4cfd-988a-02393c1b00bd"
                }
              }
            ]
          },
          {
            "id": "d967b614-cb95-40b5-9a32-bda7eba20de6",
            "name": "Pas een quote gedeeltelijk aan",
            "request": {
              "url": {
                "host": [
                  "{{quote}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "name": "Content-Type",
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "PATCH",
              "body": {
                "mode": "raw",
                "raw": "{\n\t\"tekst\": \"Deze quote is alleen in dit veld aangepast\"\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "dc780489-1ebc-4517-b999-7cf543057b99",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Successful PATCH  request\", function () {",
                    "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                    "});"
                  ],
                  "_lastExecutionId": "a4c7456d-9d99-46bd-8828-90e5c431973e"
                }
              }
            ]
          },
          {
            "id": "7b4c574e-c909-404d-94fe-d260cfaa0e07",
            "name": "Verwijder een quote",
            "request": {
              "url": {
                "host": [
                  "{{quote}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "DELETE",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "591fd68f-84ab-4069-bf3e-fc788ea97906",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Successful DELETE request\", function () {",
                    "    pm.expect(pm.response.code).to.be.oneOf([204]);",
                    "});"
                  ],
                  "_lastExecutionId": "cf38b292-04d5-4245-8f04-15d3fc3dba69"
                }
              }
            ]
          }
        ],
        "event": []
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "00cc8921-920d-499f-b775-df0f6d3639ec",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "c9fa5139-693b-43d4-ab39-789ed8191a34"
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "1b66d4e0-ae28-4b50-8bef-8c5ebd26db81",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "1590b48f-cc9f-49c9-9955-bf6777ef692f"
        }
      }
    ],
    "variable": [],
    "info": {
      "_postman_id": "530deb8d-e50f-4554-8e63-c499bff26d8e",
      "name": "demo-api client  with folders",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "id": "3c788d38-c9ff-4f9d-a651-91347a40b638",
    "values": []
  },
  "globals": {
    "id": "f8c47550-f419-45b5-aae9-4db0619a9f6f",
    "values": [
      {
        "type": "any",
        "value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImNsaWVudF9pZGVudGlmaWVyIjoiaHR0cHM6Ly93d3cuZXhhbXBsZS5jb20ifQ.eyJpc3MiOiJodHRwczovL3d3dy5leGFtcGxlLmNvbSIsImlhdCI6MTU2MzM2ODY5OSwiemRzIjp7InNjb3BlcyI6WyJ6ZHMuc2NvcGVzLnpha2VuLmxlemVuIiwiemRzLnNjb3Blcy56YWFrdHlwZXMubGV6ZW4iLCJ6ZHMuc2NvcGVzLnpha2VuLmFhbm1ha2VuIiwiemRzLnNjb3Blcy5zdGF0dXNzZW4udG9ldm9lZ2VuIiwiemRzLnNjb3Blcy56YWtlbi5iaWp3ZXJrZW4iXSwiemFha3R5cGVzIjpbIioiXX19.VMynnrS8EbAy463VGP4XBR6Jqn9EURHSDaNvtH4Gjsw",
        "key": "BEARER_TOKEN"
      },
      {
        "type": "any",
        "value": "https://www.example.com",
        "key": "test-url2"
      },
      {
        "type": "any",
        "value": "https://www.example.com",
        "key": "test-url3"
      },
      {
        "type": "any",
        "value": "https://www.example.com",
        "key": "test-content"
      },
      {
        "type": "any",
        "value": "https://www.example.com",
        "key": "test-url1"
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 20,
        "pending": 0,
        "failed": 1
      },
      "prerequests": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 7,
        "pending": 0,
        "failed": 7
      },
      "tests": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 6,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 13,
        "pending": 0,
        "failed": 1
      },
      "prerequestScripts": {
        "total": 7,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 0,
      "responseMin": 0,
      "responseMax": 0,
      "responseSd": 0,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1563368703368,
      "completed": 1563368703652
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 7,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "878037e7-a1fc-4c81-9c54-b3a729c21d58",
          "httpRequestId": "8faac178-b412-4855-ae24-97a8e707df75"
        },
        "item": {
          "id": "de44697a-aa32-403c-a5e0-907e3aea5f3d",
          "name": "test",
          "request": {
            "url": {
              "host": [
                "tesst subsub"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "host": [
              "tesst subsub"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "id": "de44697a-aa32-403c-a5e0-907e3aea5f3d",
        "requestError": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "tesst"
        }
      },
      {
        "cursor": {
          "ref": "296b9217-f712-4ce5-82ea-4150c0ec0a3b",
          "length": 7,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5da35d59-0bc8-4eee-bd6c-8381b9a2e1c9"
        },
        "item": {
          "id": "c18afe39-b175-4ff4-93e1-113adb8e1592",
          "name": "Create a quote",
          "request": {
            "url": {
              "path": [
                "quotes"
              ],
              "host": [
                "{{demo-api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"tekst\": \"To be or to be\",\n    \"bronNaam\": \"Shakespeare 3\",\n    \"bronLink\": \"http://citation.org\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b01fe77f-681c-4107-bcaa-bb42450d2bcd",
                "type": "text/javascript",
                "exec": [
                  "var quote = pm.response.json();",
                  "pm.globals.set(\"quote\", quote.url );  ",
                  "",
                  "pm.test(\"Successful POST request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([201]);",
                  "});",
                  ""
                ],
                "_lastExecutionId": "99f3c35d-50b4-414c-b620-bfbfbf27a2a4"
              }
            }
          ]
        },
        "request": {
          "url": {
            "path": [
              "quotes"
            ],
            "host": [
              "{{demo-api}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"tekst\": \"To be or to be\",\n    \"bronNaam\": \"Shakespeare 3\",\n    \"bronLink\": \"http://citation.org\"\n}"
          }
        },
        "id": "c18afe39-b175-4ff4-93e1-113adb8e1592",
        "requestError": {},
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "JSONError",
              "message": "Unexpected token u in JSON at position 0",
              "checksum": "674c73b0a2e196398fc4e0c640dd47ed",
              "id": "0d07f616-ee38-4e9e-bf13-b0579f13a5e8",
              "timestamp": 1563368703503,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "bba272f7-c4e1-40d0-af3b-6c3596e25509",
          "length": 7,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "93a264af-51a2-4396-acc1-9b76199ff5ba"
        },
        "item": {
          "id": "eac471a6-6bf5-4ee1-b9ce-cf141cd13cd7",
          "name": "Vraag alle quotes op",
          "request": {
            "url": {
              "path": [
                "quotes"
              ],
              "host": [
                "{{demo-api}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "59ec48c9-65be-4364-b07e-e999c439b77a",
                "type": "text/javascript",
                "exec": [
                  "//var quotes = pm.response.json();",
                  "//pm.globals.set(\"eerste_quote\", quotes.results[0].url );  //eerste quote uit de lijst",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "7a5fb806-86a2-410a-8b2f-09621d6a7c98"
              }
            }
          ]
        },
        "request": {
          "url": {
            "path": [
              "quotes"
            ],
            "host": [
              "{{demo-api}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "id": "eac471a6-6bf5-4ee1-b9ce-cf141cd13cd7",
        "requestError": {},
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:3)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "5464f0fa-8f12-4dd5-8c6e-653b0297befe",
          "length": 7,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eca759fb-4c41-49f3-b787-2df75f852939"
        },
        "item": {
          "id": "04d35071-ba57-4f04-acf1-d08375c8f150",
          "name": "Vraag een specifieke quote op",
          "request": {
            "url": {
              "host": [
                "{{quote}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c4265920-3b31-4cd4-877e-59223d3c3137",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "a09b5aff-5db5-4282-851f-d0d45810bfaa"
              }
            }
          ]
        },
        "request": {
          "url": {
            "host": [
              "{{quote}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "id": "04d35071-ba57-4f04-acf1-d08375c8f150",
        "requestError": {},
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:4)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "10c2bb18-e1a7-4728-8349-db3ddfb8dfc1",
          "length": 7,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "deb97c3f-295e-4727-883c-d2ff8dde7f8a"
        },
        "item": {
          "id": "024b2821-921f-4726-a262-75468980ac42",
          "name": "Vervang quote in zijn geheel",
          "request": {
            "url": {
              "host": [
                "{{quote}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"tekst\": \"Deze quote totaal vervangen\",\n    \"bronNaam\": \"Henri Korver\",\n    \"bronLink\": \"http://example.com\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "95b15424-0a25-4fb7-b15e-569ddf411356",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Successful PUT  request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                  "});",
                  "pm.test(\"Body matches string\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"Deze quote totaal vervange\");",
                  "});"
                ],
                "_lastExecutionId": "6b93167e-6ae2-4cfd-988a-02393c1b00bd"
              }
            }
          ]
        },
        "request": {
          "url": {
            "host": [
              "{{quote}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"tekst\": \"Deze quote totaal vervangen\",\n    \"bronNaam\": \"Henri Korver\",\n    \"bronLink\": \"http://example.com\"\n}"
          }
        },
        "id": "024b2821-921f-4726-a262-75468980ac42",
        "requestError": {},
        "assertions": [
          {
            "assertion": "Successful PUT  request",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Successful PUT  request",
              "message": "expected undefined to be one of [ 200 ]",
              "stack": "AssertionError: expected undefined to be one of [ 200 ]\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "Body matches string",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Body matches string",
              "message": "object tested must be an array, a map, an object, a set, a string, or a weakset, but undefined given",
              "stack": "AssertionError: object tested must be an array, a map, an object, a set, a string, or a weakset, but undefined given\n   at Object.eval sandbox-script.js:2:5)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "1b28bc03-b06c-4b70-92d5-710fb537f7e7",
          "length": 7,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2ed781dd-0275-49ee-8b14-b3ddc30248e8"
        },
        "item": {
          "id": "d967b614-cb95-40b5-9a32-bda7eba20de6",
          "name": "Pas een quote gedeeltelijk aan",
          "request": {
            "url": {
              "host": [
                "{{quote}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"tekst\": \"Deze quote is alleen in dit veld aangepast\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dc780489-1ebc-4517-b999-7cf543057b99",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Successful PATCH  request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                  "});"
                ],
                "_lastExecutionId": "a4c7456d-9d99-46bd-8828-90e5c431973e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "host": [
              "{{quote}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\n\t\"tekst\": \"Deze quote is alleen in dit veld aangepast\"\n}"
          }
        },
        "id": "d967b614-cb95-40b5-9a32-bda7eba20de6",
        "requestError": {},
        "assertions": [
          {
            "assertion": "Successful PATCH  request",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Successful PATCH  request",
              "message": "expected undefined to be one of [ 200 ]",
              "stack": "AssertionError: expected undefined to be one of [ 200 ]\n   at Object.eval sandbox-script.js:1:6)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "83206870-cb56-40a7-a176-907420e1b226",
          "length": 7,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ef5c585f-4a74-49e5-87dc-6104c76672b4"
        },
        "item": {
          "id": "7b4c574e-c909-404d-94fe-d260cfaa0e07",
          "name": "Verwijder een quote",
          "request": {
            "url": {
              "host": [
                "{{quote}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "591fd68f-84ab-4069-bf3e-fc788ea97906",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Successful DELETE request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([204]);",
                  "});"
                ],
                "_lastExecutionId": "cf38b292-04d5-4245-8f04-15d3fc3dba69"
              }
            }
          ]
        },
        "request": {
          "url": {
            "host": [
              "{{quote}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "id": "7b4c574e-c909-404d-94fe-d260cfaa0e07",
        "requestError": {},
        "assertions": [
          {
            "assertion": "Successful DELETE request",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Successful DELETE request",
              "message": "expected undefined to be one of [ 204 ]",
              "stack": "AssertionError: expected undefined to be one of [ 204 ]\n   at Object.eval sandbox-script.js:1:7)"
            }
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 0
    },
    "failures": [
      {
        "error": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "tesst",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND tesst",
          "stack": "Error: getaddrinfo ENOTFOUND tesst\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:60:26)",
          "checksum": "ca1f2365309354734e47bd6b8d6998fa",
          "id": "f47b9621-ae61-4a9a-8e87-431640f5aee5",
          "timestamp": 1563368703460,
          "stacktrace": [
            {
              "fileName": "dns.js",
              "lineNumber": 60,
              "functionName": "GetAddrInfoReqWrap.onlookup [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookup [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "de44697a-aa32-403c-a5e0-907e3aea5f3d",
          "name": "test",
          "request": {
            "url": {
              "host": [
                "tesst subsub"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "_": {
            "postman_isSubFolder": true
          },
          "id": "94120dfe-d051-462c-a1cf-5f5b527da983",
          "name": "d",
          "item": [
            {
              "id": "de44697a-aa32-403c-a5e0-907e3aea5f3d",
              "name": "test",
              "request": {
                "url": {
                  "host": [
                    "tesst subsub"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 7,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "878037e7-a1fc-4c81-9c54-b3a729c21d58",
          "httpRequestId": "8faac178-b412-4855-ae24-97a8e707df75"
        }
      },
      {
        "error": {
          "name": "Error",
          "message": "Invalid URI \"http:///%7B%7Bdemo-api%7D%7D/quotes\"",
          "stack": "Error: Invalid URI \"http:///%7B%7Bdemo-api%7D%7D/quotes\"\n    at Request.init (/home/projects/env/vng/node_modules/postman-request/request.js:343:31)\n    at new Request (/home/projects/env/vng/node_modules/postman-request/request.js:170:8)\n    at request (/home/projects/env/vng/node_modules/postman-request/index.js:47:10)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:74:23\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:473:16\n    at next (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5329:29)\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:969:16\n    at setCertificate (/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:40:20)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:69:13\n    at nextTask (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5324:14)\n    at next (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5331:9)\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:969:16\n    at setProxy (/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:21:9)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:66:13\n    at nextTask (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5324:14)\n    at Object.waterfall (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5334:5)",
          "checksum": "511e834023cd2e84e107331cc483836c",
          "id": "21eb0f21-9c54-4c0d-9fdf-b0e5787ca040",
          "timestamp": 1563368703489,
          "stacktrace": [
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/request.js",
              "lineNumber": 343,
              "functionName": "Request.init",
              "typeName": "Request",
              "methodName": "init",
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/request.js",
              "lineNumber": 170,
              "functionName": "new Request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/index.js",
              "lineNumber": 47,
              "functionName": "request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 10,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 74,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 23,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 473,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5329,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 29,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 40,
              "functionName": "setCertificate",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 69,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5331,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 21,
              "functionName": "setProxy",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 66,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5334,
              "functionName": "Object.waterfall",
              "typeName": "Object",
              "methodName": "waterfall",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "c18afe39-b175-4ff4-93e1-113adb8e1592",
          "name": "Create a quote",
          "request": {
            "url": {
              "path": [
                "quotes"
              ],
              "host": [
                "{{demo-api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"tekst\": \"To be or to be\",\n    \"bronNaam\": \"Shakespeare 3\",\n    \"bronLink\": \"http://citation.org\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b01fe77f-681c-4107-bcaa-bb42450d2bcd",
                "type": "text/javascript",
                "exec": [
                  "var quote = pm.response.json();",
                  "pm.globals.set(\"quote\", quote.url );  ",
                  "",
                  "pm.test(\"Successful POST request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([201]);",
                  "});",
                  ""
                ],
                "_lastExecutionId": "99f3c35d-50b4-414c-b620-bfbfbf27a2a4"
              }
            }
          ]
        },
        "parent": {
          "id": "c6f95f7e-955f-423b-b045-9b640dae6256",
          "name": "part1",
          "item": [
            {
              "_": {
                "postman_isSubFolder": true
              },
              "id": "94120dfe-d051-462c-a1cf-5f5b527da983",
              "name": "d",
              "item": [
                {
                  "id": "de44697a-aa32-403c-a5e0-907e3aea5f3d",
                  "name": "test",
                  "request": {
                    "url": {
                      "host": [
                        "tesst subsub"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    }
                  },
                  "response": [],
                  "event": []
                }
              ],
              "event": []
            },
            {
              "id": "c18afe39-b175-4ff4-93e1-113adb8e1592",
              "name": "Create a quote",
              "request": {
                "url": {
                  "path": [
                    "quotes"
                  ],
                  "host": [
                    "{{demo-api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tekst\": \"To be or to be\",\n    \"bronNaam\": \"Shakespeare 3\",\n    \"bronLink\": \"http://citation.org\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b01fe77f-681c-4107-bcaa-bb42450d2bcd",
                    "type": "text/javascript",
                    "exec": [
                      "var quote = pm.response.json();",
                      "pm.globals.set(\"quote\", quote.url );  ",
                      "",
                      "pm.test(\"Successful POST request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([201]);",
                      "});",
                      ""
                    ],
                    "_lastExecutionId": "99f3c35d-50b4-414c-b620-bfbfbf27a2a4"
                  }
                }
              ]
            },
            {
              "id": "eac471a6-6bf5-4ee1-b9ce-cf141cd13cd7",
              "name": "Vraag alle quotes op",
              "request": {
                "url": {
                  "path": [
                    "quotes"
                  ],
                  "host": [
                    "{{demo-api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "59ec48c9-65be-4364-b07e-e999c439b77a",
                    "type": "text/javascript",
                    "exec": [
                      "//var quotes = pm.response.json();",
                      "//pm.globals.set(\"eerste_quote\", quotes.results[0].url );  //eerste quote uit de lijst",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "7a5fb806-86a2-410a-8b2f-09621d6a7c98"
                  }
                }
              ]
            },
            {
              "id": "04d35071-ba57-4f04-acf1-d08375c8f150",
              "name": "Vraag een specifieke quote op",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4265920-3b31-4cd4-877e-59223d3c3137",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "a09b5aff-5db5-4282-851f-d0d45810bfaa"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "296b9217-f712-4ce5-82ea-4150c0ec0a3b",
          "length": 7,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5da35d59-0bc8-4eee-bd6c-8381b9a2e1c9"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "JSONError",
          "message": "Unexpected token u in JSON at position 0",
          "checksum": "674c73b0a2e196398fc4e0c640dd47ed",
          "id": "0d07f616-ee38-4e9e-bf13-b0579f13a5e8",
          "timestamp": 1563368703503,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "c18afe39-b175-4ff4-93e1-113adb8e1592",
          "name": "Create a quote",
          "request": {
            "url": {
              "path": [
                "quotes"
              ],
              "host": [
                "{{demo-api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"tekst\": \"To be or to be\",\n    \"bronNaam\": \"Shakespeare 3\",\n    \"bronLink\": \"http://citation.org\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b01fe77f-681c-4107-bcaa-bb42450d2bcd",
                "type": "text/javascript",
                "exec": [
                  "var quote = pm.response.json();",
                  "pm.globals.set(\"quote\", quote.url );  ",
                  "",
                  "pm.test(\"Successful POST request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([201]);",
                  "});",
                  ""
                ],
                "_lastExecutionId": "99f3c35d-50b4-414c-b620-bfbfbf27a2a4"
              }
            }
          ]
        },
        "parent": {
          "id": "c6f95f7e-955f-423b-b045-9b640dae6256",
          "name": "part1",
          "item": [
            {
              "_": {
                "postman_isSubFolder": true
              },
              "id": "94120dfe-d051-462c-a1cf-5f5b527da983",
              "name": "d",
              "item": [
                {
                  "id": "de44697a-aa32-403c-a5e0-907e3aea5f3d",
                  "name": "test",
                  "request": {
                    "url": {
                      "host": [
                        "tesst subsub"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    }
                  },
                  "response": [],
                  "event": []
                }
              ],
              "event": []
            },
            {
              "id": "c18afe39-b175-4ff4-93e1-113adb8e1592",
              "name": "Create a quote",
              "request": {
                "url": {
                  "path": [
                    "quotes"
                  ],
                  "host": [
                    "{{demo-api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tekst\": \"To be or to be\",\n    \"bronNaam\": \"Shakespeare 3\",\n    \"bronLink\": \"http://citation.org\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b01fe77f-681c-4107-bcaa-bb42450d2bcd",
                    "type": "text/javascript",
                    "exec": [
                      "var quote = pm.response.json();",
                      "pm.globals.set(\"quote\", quote.url );  ",
                      "",
                      "pm.test(\"Successful POST request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([201]);",
                      "});",
                      ""
                    ],
                    "_lastExecutionId": "99f3c35d-50b4-414c-b620-bfbfbf27a2a4"
                  }
                }
              ]
            },
            {
              "id": "eac471a6-6bf5-4ee1-b9ce-cf141cd13cd7",
              "name": "Vraag alle quotes op",
              "request": {
                "url": {
                  "path": [
                    "quotes"
                  ],
                  "host": [
                    "{{demo-api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "59ec48c9-65be-4364-b07e-e999c439b77a",
                    "type": "text/javascript",
                    "exec": [
                      "//var quotes = pm.response.json();",
                      "//pm.globals.set(\"eerste_quote\", quotes.results[0].url );  //eerste quote uit de lijst",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "7a5fb806-86a2-410a-8b2f-09621d6a7c98"
                  }
                }
              ]
            },
            {
              "id": "04d35071-ba57-4f04-acf1-d08375c8f150",
              "name": "Vraag een specifieke quote op",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4265920-3b31-4cd4-877e-59223d3c3137",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "a09b5aff-5db5-4282-851f-d0d45810bfaa"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "296b9217-f712-4ce5-82ea-4150c0ec0a3b",
          "length": 7,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5da35d59-0bc8-4eee-bd6c-8381b9a2e1c9",
          "scriptId": "b01fe77f-681c-4107-bcaa-bb42450d2bcd"
        }
      },
      {
        "error": {
          "name": "Error",
          "message": "Invalid URI \"http:///%7B%7Bdemo-api%7D%7D/quotes\"",
          "stack": "Error: Invalid URI \"http:///%7B%7Bdemo-api%7D%7D/quotes\"\n    at Request.init (/home/projects/env/vng/node_modules/postman-request/request.js:343:31)\n    at new Request (/home/projects/env/vng/node_modules/postman-request/request.js:170:8)\n    at request (/home/projects/env/vng/node_modules/postman-request/index.js:47:10)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:74:23\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:473:16\n    at next (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5329:29)\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:969:16\n    at setCertificate (/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:40:20)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:69:13\n    at nextTask (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5324:14)\n    at next (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5331:9)\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:969:16\n    at setProxy (/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:21:9)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:66:13\n    at nextTask (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5324:14)\n    at Object.waterfall (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5334:5)",
          "checksum": "511e834023cd2e84e107331cc483836c",
          "id": "f788ddce-2e9a-48d6-830b-e475fdf553bd",
          "timestamp": 1563368703518,
          "stacktrace": [
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/request.js",
              "lineNumber": 343,
              "functionName": "Request.init",
              "typeName": "Request",
              "methodName": "init",
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/request.js",
              "lineNumber": 170,
              "functionName": "new Request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/index.js",
              "lineNumber": 47,
              "functionName": "request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 10,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 74,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 23,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 473,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5329,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 29,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 40,
              "functionName": "setCertificate",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 69,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5331,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 21,
              "functionName": "setProxy",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 66,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5334,
              "functionName": "Object.waterfall",
              "typeName": "Object",
              "methodName": "waterfall",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "eac471a6-6bf5-4ee1-b9ce-cf141cd13cd7",
          "name": "Vraag alle quotes op",
          "request": {
            "url": {
              "path": [
                "quotes"
              ],
              "host": [
                "{{demo-api}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "59ec48c9-65be-4364-b07e-e999c439b77a",
                "type": "text/javascript",
                "exec": [
                  "//var quotes = pm.response.json();",
                  "//pm.globals.set(\"eerste_quote\", quotes.results[0].url );  //eerste quote uit de lijst",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "7a5fb806-86a2-410a-8b2f-09621d6a7c98"
              }
            }
          ]
        },
        "parent": {
          "id": "c6f95f7e-955f-423b-b045-9b640dae6256",
          "name": "part1",
          "item": [
            {
              "_": {
                "postman_isSubFolder": true
              },
              "id": "94120dfe-d051-462c-a1cf-5f5b527da983",
              "name": "d",
              "item": [
                {
                  "id": "de44697a-aa32-403c-a5e0-907e3aea5f3d",
                  "name": "test",
                  "request": {
                    "url": {
                      "host": [
                        "tesst subsub"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    }
                  },
                  "response": [],
                  "event": []
                }
              ],
              "event": []
            },
            {
              "id": "c18afe39-b175-4ff4-93e1-113adb8e1592",
              "name": "Create a quote",
              "request": {
                "url": {
                  "path": [
                    "quotes"
                  ],
                  "host": [
                    "{{demo-api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tekst\": \"To be or to be\",\n    \"bronNaam\": \"Shakespeare 3\",\n    \"bronLink\": \"http://citation.org\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b01fe77f-681c-4107-bcaa-bb42450d2bcd",
                    "type": "text/javascript",
                    "exec": [
                      "var quote = pm.response.json();",
                      "pm.globals.set(\"quote\", quote.url );  ",
                      "",
                      "pm.test(\"Successful POST request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([201]);",
                      "});",
                      ""
                    ],
                    "_lastExecutionId": "99f3c35d-50b4-414c-b620-bfbfbf27a2a4"
                  }
                }
              ]
            },
            {
              "id": "eac471a6-6bf5-4ee1-b9ce-cf141cd13cd7",
              "name": "Vraag alle quotes op",
              "request": {
                "url": {
                  "path": [
                    "quotes"
                  ],
                  "host": [
                    "{{demo-api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "59ec48c9-65be-4364-b07e-e999c439b77a",
                    "type": "text/javascript",
                    "exec": [
                      "//var quotes = pm.response.json();",
                      "//pm.globals.set(\"eerste_quote\", quotes.results[0].url );  //eerste quote uit de lijst",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "7a5fb806-86a2-410a-8b2f-09621d6a7c98"
                  }
                }
              ]
            },
            {
              "id": "04d35071-ba57-4f04-acf1-d08375c8f150",
              "name": "Vraag een specifieke quote op",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4265920-3b31-4cd4-877e-59223d3c3137",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "a09b5aff-5db5-4282-851f-d0d45810bfaa"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "bba272f7-c4e1-40d0-af3b-6c3596e25509",
          "length": 7,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "93a264af-51a2-4396-acc1-9b76199ff5ba"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:3)",
          "checksum": "bd291fd6636fa58b6be1d6a9c5c383ff",
          "id": "f50ef82d-68e4-4736-bf32-32449691412b",
          "timestamp": 1563368703537,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "eac471a6-6bf5-4ee1-b9ce-cf141cd13cd7",
          "name": "Vraag alle quotes op",
          "request": {
            "url": {
              "path": [
                "quotes"
              ],
              "host": [
                "{{demo-api}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "59ec48c9-65be-4364-b07e-e999c439b77a",
                "type": "text/javascript",
                "exec": [
                  "//var quotes = pm.response.json();",
                  "//pm.globals.set(\"eerste_quote\", quotes.results[0].url );  //eerste quote uit de lijst",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "7a5fb806-86a2-410a-8b2f-09621d6a7c98"
              }
            }
          ]
        },
        "parent": {
          "id": "c6f95f7e-955f-423b-b045-9b640dae6256",
          "name": "part1",
          "item": [
            {
              "_": {
                "postman_isSubFolder": true
              },
              "id": "94120dfe-d051-462c-a1cf-5f5b527da983",
              "name": "d",
              "item": [
                {
                  "id": "de44697a-aa32-403c-a5e0-907e3aea5f3d",
                  "name": "test",
                  "request": {
                    "url": {
                      "host": [
                        "tesst subsub"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    }
                  },
                  "response": [],
                  "event": []
                }
              ],
              "event": []
            },
            {
              "id": "c18afe39-b175-4ff4-93e1-113adb8e1592",
              "name": "Create a quote",
              "request": {
                "url": {
                  "path": [
                    "quotes"
                  ],
                  "host": [
                    "{{demo-api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tekst\": \"To be or to be\",\n    \"bronNaam\": \"Shakespeare 3\",\n    \"bronLink\": \"http://citation.org\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b01fe77f-681c-4107-bcaa-bb42450d2bcd",
                    "type": "text/javascript",
                    "exec": [
                      "var quote = pm.response.json();",
                      "pm.globals.set(\"quote\", quote.url );  ",
                      "",
                      "pm.test(\"Successful POST request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([201]);",
                      "});",
                      ""
                    ],
                    "_lastExecutionId": "99f3c35d-50b4-414c-b620-bfbfbf27a2a4"
                  }
                }
              ]
            },
            {
              "id": "eac471a6-6bf5-4ee1-b9ce-cf141cd13cd7",
              "name": "Vraag alle quotes op",
              "request": {
                "url": {
                  "path": [
                    "quotes"
                  ],
                  "host": [
                    "{{demo-api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "59ec48c9-65be-4364-b07e-e999c439b77a",
                    "type": "text/javascript",
                    "exec": [
                      "//var quotes = pm.response.json();",
                      "//pm.globals.set(\"eerste_quote\", quotes.results[0].url );  //eerste quote uit de lijst",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "7a5fb806-86a2-410a-8b2f-09621d6a7c98"
                  }
                }
              ]
            },
            {
              "id": "04d35071-ba57-4f04-acf1-d08375c8f150",
              "name": "Vraag een specifieke quote op",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4265920-3b31-4cd4-877e-59223d3c3137",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "a09b5aff-5db5-4282-851f-d0d45810bfaa"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "bba272f7-c4e1-40d0-af3b-6c3596e25509",
          "length": 7,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "93a264af-51a2-4396-acc1-9b76199ff5ba",
          "scriptId": "59ec48c9-65be-4364-b07e-e999c439b77a",
          "execution": "7a5fb806-86a2-410a-8b2f-09621d6a7c98"
        }
      },
      {
        "error": {
          "name": "Error",
          "message": "Invalid URI \"http:///%7B%7Bquote%7D%7D\"",
          "stack": "Error: Invalid URI \"http:///%7B%7Bquote%7D%7D\"\n    at Request.init (/home/projects/env/vng/node_modules/postman-request/request.js:343:31)\n    at new Request (/home/projects/env/vng/node_modules/postman-request/request.js:170:8)\n    at request (/home/projects/env/vng/node_modules/postman-request/index.js:47:10)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:74:23\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:473:16\n    at next (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5329:29)\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:969:16\n    at setCertificate (/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:40:20)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:69:13\n    at nextTask (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5324:14)\n    at next (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5331:9)\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:969:16\n    at setProxy (/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:21:9)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:66:13\n    at nextTask (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5324:14)\n    at Object.waterfall (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5334:5)",
          "checksum": "56c29b1a5b508419aba963e964b54b96",
          "id": "ac9060f2-699e-4e88-b865-35cbb4d8e502",
          "timestamp": 1563368703558,
          "stacktrace": [
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/request.js",
              "lineNumber": 343,
              "functionName": "Request.init",
              "typeName": "Request",
              "methodName": "init",
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/request.js",
              "lineNumber": 170,
              "functionName": "new Request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/index.js",
              "lineNumber": 47,
              "functionName": "request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 10,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 74,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 23,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 473,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5329,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 29,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 40,
              "functionName": "setCertificate",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 69,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5331,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 21,
              "functionName": "setProxy",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 66,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5334,
              "functionName": "Object.waterfall",
              "typeName": "Object",
              "methodName": "waterfall",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "04d35071-ba57-4f04-acf1-d08375c8f150",
          "name": "Vraag een specifieke quote op",
          "request": {
            "url": {
              "host": [
                "{{quote}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c4265920-3b31-4cd4-877e-59223d3c3137",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "a09b5aff-5db5-4282-851f-d0d45810bfaa"
              }
            }
          ]
        },
        "parent": {
          "id": "c6f95f7e-955f-423b-b045-9b640dae6256",
          "name": "part1",
          "item": [
            {
              "_": {
                "postman_isSubFolder": true
              },
              "id": "94120dfe-d051-462c-a1cf-5f5b527da983",
              "name": "d",
              "item": [
                {
                  "id": "de44697a-aa32-403c-a5e0-907e3aea5f3d",
                  "name": "test",
                  "request": {
                    "url": {
                      "host": [
                        "tesst subsub"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    }
                  },
                  "response": [],
                  "event": []
                }
              ],
              "event": []
            },
            {
              "id": "c18afe39-b175-4ff4-93e1-113adb8e1592",
              "name": "Create a quote",
              "request": {
                "url": {
                  "path": [
                    "quotes"
                  ],
                  "host": [
                    "{{demo-api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tekst\": \"To be or to be\",\n    \"bronNaam\": \"Shakespeare 3\",\n    \"bronLink\": \"http://citation.org\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b01fe77f-681c-4107-bcaa-bb42450d2bcd",
                    "type": "text/javascript",
                    "exec": [
                      "var quote = pm.response.json();",
                      "pm.globals.set(\"quote\", quote.url );  ",
                      "",
                      "pm.test(\"Successful POST request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([201]);",
                      "});",
                      ""
                    ],
                    "_lastExecutionId": "99f3c35d-50b4-414c-b620-bfbfbf27a2a4"
                  }
                }
              ]
            },
            {
              "id": "eac471a6-6bf5-4ee1-b9ce-cf141cd13cd7",
              "name": "Vraag alle quotes op",
              "request": {
                "url": {
                  "path": [
                    "quotes"
                  ],
                  "host": [
                    "{{demo-api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "59ec48c9-65be-4364-b07e-e999c439b77a",
                    "type": "text/javascript",
                    "exec": [
                      "//var quotes = pm.response.json();",
                      "//pm.globals.set(\"eerste_quote\", quotes.results[0].url );  //eerste quote uit de lijst",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "7a5fb806-86a2-410a-8b2f-09621d6a7c98"
                  }
                }
              ]
            },
            {
              "id": "04d35071-ba57-4f04-acf1-d08375c8f150",
              "name": "Vraag een specifieke quote op",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4265920-3b31-4cd4-877e-59223d3c3137",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "a09b5aff-5db5-4282-851f-d0d45810bfaa"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "5464f0fa-8f12-4dd5-8c6e-653b0297befe",
          "length": 7,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eca759fb-4c41-49f3-b787-2df75f852939"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:4)",
          "checksum": "c61b79a143b5f8899a9762ad2c369493",
          "id": "fa1b523b-9c1d-4276-aec8-f031ca044cbb",
          "timestamp": 1563368703568,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "04d35071-ba57-4f04-acf1-d08375c8f150",
          "name": "Vraag een specifieke quote op",
          "request": {
            "url": {
              "host": [
                "{{quote}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c4265920-3b31-4cd4-877e-59223d3c3137",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "a09b5aff-5db5-4282-851f-d0d45810bfaa"
              }
            }
          ]
        },
        "parent": {
          "id": "c6f95f7e-955f-423b-b045-9b640dae6256",
          "name": "part1",
          "item": [
            {
              "_": {
                "postman_isSubFolder": true
              },
              "id": "94120dfe-d051-462c-a1cf-5f5b527da983",
              "name": "d",
              "item": [
                {
                  "id": "de44697a-aa32-403c-a5e0-907e3aea5f3d",
                  "name": "test",
                  "request": {
                    "url": {
                      "host": [
                        "tesst subsub"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    }
                  },
                  "response": [],
                  "event": []
                }
              ],
              "event": []
            },
            {
              "id": "c18afe39-b175-4ff4-93e1-113adb8e1592",
              "name": "Create a quote",
              "request": {
                "url": {
                  "path": [
                    "quotes"
                  ],
                  "host": [
                    "{{demo-api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tekst\": \"To be or to be\",\n    \"bronNaam\": \"Shakespeare 3\",\n    \"bronLink\": \"http://citation.org\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b01fe77f-681c-4107-bcaa-bb42450d2bcd",
                    "type": "text/javascript",
                    "exec": [
                      "var quote = pm.response.json();",
                      "pm.globals.set(\"quote\", quote.url );  ",
                      "",
                      "pm.test(\"Successful POST request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([201]);",
                      "});",
                      ""
                    ],
                    "_lastExecutionId": "99f3c35d-50b4-414c-b620-bfbfbf27a2a4"
                  }
                }
              ]
            },
            {
              "id": "eac471a6-6bf5-4ee1-b9ce-cf141cd13cd7",
              "name": "Vraag alle quotes op",
              "request": {
                "url": {
                  "path": [
                    "quotes"
                  ],
                  "host": [
                    "{{demo-api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "59ec48c9-65be-4364-b07e-e999c439b77a",
                    "type": "text/javascript",
                    "exec": [
                      "//var quotes = pm.response.json();",
                      "//pm.globals.set(\"eerste_quote\", quotes.results[0].url );  //eerste quote uit de lijst",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "7a5fb806-86a2-410a-8b2f-09621d6a7c98"
                  }
                }
              ]
            },
            {
              "id": "04d35071-ba57-4f04-acf1-d08375c8f150",
              "name": "Vraag een specifieke quote op",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4265920-3b31-4cd4-877e-59223d3c3137",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "a09b5aff-5db5-4282-851f-d0d45810bfaa"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "5464f0fa-8f12-4dd5-8c6e-653b0297befe",
          "length": 7,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eca759fb-4c41-49f3-b787-2df75f852939",
          "scriptId": "c4265920-3b31-4cd4-877e-59223d3c3137",
          "execution": "a09b5aff-5db5-4282-851f-d0d45810bfaa"
        }
      },
      {
        "error": {
          "name": "Error",
          "message": "Invalid URI \"http:///%7B%7Bquote%7D%7D\"",
          "stack": "Error: Invalid URI \"http:///%7B%7Bquote%7D%7D\"\n    at Request.init (/home/projects/env/vng/node_modules/postman-request/request.js:343:31)\n    at new Request (/home/projects/env/vng/node_modules/postman-request/request.js:170:8)\n    at request (/home/projects/env/vng/node_modules/postman-request/index.js:47:10)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:74:23\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:473:16\n    at next (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5329:29)\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:969:16\n    at setCertificate (/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:40:20)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:69:13\n    at nextTask (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5324:14)\n    at next (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5331:9)\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:969:16\n    at setProxy (/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:21:9)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:66:13\n    at nextTask (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5324:14)\n    at Object.waterfall (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5334:5)",
          "checksum": "56c29b1a5b508419aba963e964b54b96",
          "id": "53d2824e-60e0-4db3-bdde-a1429b131c19",
          "timestamp": 1563368703584,
          "stacktrace": [
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/request.js",
              "lineNumber": 343,
              "functionName": "Request.init",
              "typeName": "Request",
              "methodName": "init",
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/request.js",
              "lineNumber": 170,
              "functionName": "new Request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/index.js",
              "lineNumber": 47,
              "functionName": "request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 10,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 74,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 23,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 473,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5329,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 29,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 40,
              "functionName": "setCertificate",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 69,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5331,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 21,
              "functionName": "setProxy",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 66,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5334,
              "functionName": "Object.waterfall",
              "typeName": "Object",
              "methodName": "waterfall",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "024b2821-921f-4726-a262-75468980ac42",
          "name": "Vervang quote in zijn geheel",
          "request": {
            "url": {
              "host": [
                "{{quote}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"tekst\": \"Deze quote totaal vervangen\",\n    \"bronNaam\": \"Henri Korver\",\n    \"bronLink\": \"http://example.com\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "95b15424-0a25-4fb7-b15e-569ddf411356",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Successful PUT  request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                  "});",
                  "pm.test(\"Body matches string\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"Deze quote totaal vervange\");",
                  "});"
                ],
                "_lastExecutionId": "6b93167e-6ae2-4cfd-988a-02393c1b00bd"
              }
            }
          ]
        },
        "parent": {
          "id": "bb89aa33-7534-432d-98c6-667a60f8f22f",
          "name": "part2",
          "item": [
            {
              "id": "024b2821-921f-4726-a262-75468980ac42",
              "name": "Vervang quote in zijn geheel",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tekst\": \"Deze quote totaal vervangen\",\n    \"bronNaam\": \"Henri Korver\",\n    \"bronLink\": \"http://example.com\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "95b15424-0a25-4fb7-b15e-569ddf411356",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful PUT  request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                      "});",
                      "pm.test(\"Body matches string\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"Deze quote totaal vervange\");",
                      "});"
                    ],
                    "_lastExecutionId": "6b93167e-6ae2-4cfd-988a-02393c1b00bd"
                  }
                }
              ]
            },
            {
              "id": "d967b614-cb95-40b5-9a32-bda7eba20de6",
              "name": "Pas een quote gedeeltelijk aan",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"tekst\": \"Deze quote is alleen in dit veld aangepast\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dc780489-1ebc-4517-b999-7cf543057b99",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful PATCH  request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                      "});"
                    ],
                    "_lastExecutionId": "a4c7456d-9d99-46bd-8828-90e5c431973e"
                  }
                }
              ]
            },
            {
              "id": "7b4c574e-c909-404d-94fe-d260cfaa0e07",
              "name": "Verwijder een quote",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "591fd68f-84ab-4069-bf3e-fc788ea97906",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful DELETE request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([204]);",
                      "});"
                    ],
                    "_lastExecutionId": "cf38b292-04d5-4245-8f04-15d3fc3dba69"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "10c2bb18-e1a7-4728-8349-db3ddfb8dfc1",
          "length": 7,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "deb97c3f-295e-4727-883c-d2ff8dde7f8a"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Successful PUT  request",
          "message": "expected undefined to be one of [ 200 ]",
          "stack": "AssertionError: expected undefined to be one of [ 200 ]\n   at Object.eval sandbox-script.js:1:5)",
          "checksum": "5f0107ac25a93770eef18ca3973f73df",
          "id": "6581fe44-88ab-46e8-b6d7-26ebbe24f6cb",
          "timestamp": 1563368703594,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "024b2821-921f-4726-a262-75468980ac42",
          "name": "Vervang quote in zijn geheel",
          "request": {
            "url": {
              "host": [
                "{{quote}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"tekst\": \"Deze quote totaal vervangen\",\n    \"bronNaam\": \"Henri Korver\",\n    \"bronLink\": \"http://example.com\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "95b15424-0a25-4fb7-b15e-569ddf411356",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Successful PUT  request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                  "});",
                  "pm.test(\"Body matches string\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"Deze quote totaal vervange\");",
                  "});"
                ],
                "_lastExecutionId": "6b93167e-6ae2-4cfd-988a-02393c1b00bd"
              }
            }
          ]
        },
        "parent": {
          "id": "bb89aa33-7534-432d-98c6-667a60f8f22f",
          "name": "part2",
          "item": [
            {
              "id": "024b2821-921f-4726-a262-75468980ac42",
              "name": "Vervang quote in zijn geheel",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tekst\": \"Deze quote totaal vervangen\",\n    \"bronNaam\": \"Henri Korver\",\n    \"bronLink\": \"http://example.com\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "95b15424-0a25-4fb7-b15e-569ddf411356",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful PUT  request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                      "});",
                      "pm.test(\"Body matches string\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"Deze quote totaal vervange\");",
                      "});"
                    ],
                    "_lastExecutionId": "6b93167e-6ae2-4cfd-988a-02393c1b00bd"
                  }
                }
              ]
            },
            {
              "id": "d967b614-cb95-40b5-9a32-bda7eba20de6",
              "name": "Pas een quote gedeeltelijk aan",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"tekst\": \"Deze quote is alleen in dit veld aangepast\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dc780489-1ebc-4517-b999-7cf543057b99",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful PATCH  request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                      "});"
                    ],
                    "_lastExecutionId": "a4c7456d-9d99-46bd-8828-90e5c431973e"
                  }
                }
              ]
            },
            {
              "id": "7b4c574e-c909-404d-94fe-d260cfaa0e07",
              "name": "Verwijder een quote",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "591fd68f-84ab-4069-bf3e-fc788ea97906",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful DELETE request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([204]);",
                      "});"
                    ],
                    "_lastExecutionId": "cf38b292-04d5-4245-8f04-15d3fc3dba69"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "10c2bb18-e1a7-4728-8349-db3ddfb8dfc1",
          "length": 7,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "deb97c3f-295e-4727-883c-d2ff8dde7f8a",
          "scriptId": "95b15424-0a25-4fb7-b15e-569ddf411356",
          "execution": "6b93167e-6ae2-4cfd-988a-02393c1b00bd"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Body matches string",
          "message": "object tested must be an array, a map, an object, a set, a string, or a weakset, but undefined given",
          "stack": "AssertionError: object tested must be an array, a map, an object, a set, a string, or a weakset, but undefined given\n   at Object.eval sandbox-script.js:2:5)",
          "checksum": "370ccad574185f80f86a0ce31d7fc287",
          "id": "dd206842-8e95-4ce9-b852-7c5de7eb5933",
          "timestamp": 1563368703595,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "024b2821-921f-4726-a262-75468980ac42",
          "name": "Vervang quote in zijn geheel",
          "request": {
            "url": {
              "host": [
                "{{quote}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"tekst\": \"Deze quote totaal vervangen\",\n    \"bronNaam\": \"Henri Korver\",\n    \"bronLink\": \"http://example.com\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "95b15424-0a25-4fb7-b15e-569ddf411356",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Successful PUT  request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                  "});",
                  "pm.test(\"Body matches string\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"Deze quote totaal vervange\");",
                  "});"
                ],
                "_lastExecutionId": "6b93167e-6ae2-4cfd-988a-02393c1b00bd"
              }
            }
          ]
        },
        "parent": {
          "id": "bb89aa33-7534-432d-98c6-667a60f8f22f",
          "name": "part2",
          "item": [
            {
              "id": "024b2821-921f-4726-a262-75468980ac42",
              "name": "Vervang quote in zijn geheel",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tekst\": \"Deze quote totaal vervangen\",\n    \"bronNaam\": \"Henri Korver\",\n    \"bronLink\": \"http://example.com\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "95b15424-0a25-4fb7-b15e-569ddf411356",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful PUT  request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                      "});",
                      "pm.test(\"Body matches string\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"Deze quote totaal vervange\");",
                      "});"
                    ],
                    "_lastExecutionId": "6b93167e-6ae2-4cfd-988a-02393c1b00bd"
                  }
                }
              ]
            },
            {
              "id": "d967b614-cb95-40b5-9a32-bda7eba20de6",
              "name": "Pas een quote gedeeltelijk aan",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"tekst\": \"Deze quote is alleen in dit veld aangepast\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dc780489-1ebc-4517-b999-7cf543057b99",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful PATCH  request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                      "});"
                    ],
                    "_lastExecutionId": "a4c7456d-9d99-46bd-8828-90e5c431973e"
                  }
                }
              ]
            },
            {
              "id": "7b4c574e-c909-404d-94fe-d260cfaa0e07",
              "name": "Verwijder een quote",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "591fd68f-84ab-4069-bf3e-fc788ea97906",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful DELETE request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([204]);",
                      "});"
                    ],
                    "_lastExecutionId": "cf38b292-04d5-4245-8f04-15d3fc3dba69"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "10c2bb18-e1a7-4728-8349-db3ddfb8dfc1",
          "length": 7,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "deb97c3f-295e-4727-883c-d2ff8dde7f8a",
          "scriptId": "95b15424-0a25-4fb7-b15e-569ddf411356",
          "execution": "6b93167e-6ae2-4cfd-988a-02393c1b00bd"
        }
      },
      {
        "error": {
          "name": "Error",
          "message": "Invalid URI \"http:///%7B%7Bquote%7D%7D\"",
          "stack": "Error: Invalid URI \"http:///%7B%7Bquote%7D%7D\"\n    at Request.init (/home/projects/env/vng/node_modules/postman-request/request.js:343:31)\n    at new Request (/home/projects/env/vng/node_modules/postman-request/request.js:170:8)\n    at request (/home/projects/env/vng/node_modules/postman-request/index.js:47:10)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:74:23\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:473:16\n    at next (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5329:29)\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:969:16\n    at setCertificate (/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:40:20)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:69:13\n    at nextTask (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5324:14)\n    at next (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5331:9)\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:969:16\n    at setProxy (/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:21:9)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:66:13\n    at nextTask (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5324:14)\n    at Object.waterfall (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5334:5)",
          "checksum": "56c29b1a5b508419aba963e964b54b96",
          "id": "5effbde1-c03b-4e05-91ad-be7307cb8ad3",
          "timestamp": 1563368703611,
          "stacktrace": [
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/request.js",
              "lineNumber": 343,
              "functionName": "Request.init",
              "typeName": "Request",
              "methodName": "init",
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/request.js",
              "lineNumber": 170,
              "functionName": "new Request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/index.js",
              "lineNumber": 47,
              "functionName": "request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 10,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 74,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 23,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 473,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5329,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 29,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 40,
              "functionName": "setCertificate",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 69,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5331,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 21,
              "functionName": "setProxy",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 66,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5334,
              "functionName": "Object.waterfall",
              "typeName": "Object",
              "methodName": "waterfall",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "d967b614-cb95-40b5-9a32-bda7eba20de6",
          "name": "Pas een quote gedeeltelijk aan",
          "request": {
            "url": {
              "host": [
                "{{quote}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"tekst\": \"Deze quote is alleen in dit veld aangepast\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dc780489-1ebc-4517-b999-7cf543057b99",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Successful PATCH  request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                  "});"
                ],
                "_lastExecutionId": "a4c7456d-9d99-46bd-8828-90e5c431973e"
              }
            }
          ]
        },
        "parent": {
          "id": "bb89aa33-7534-432d-98c6-667a60f8f22f",
          "name": "part2",
          "item": [
            {
              "id": "024b2821-921f-4726-a262-75468980ac42",
              "name": "Vervang quote in zijn geheel",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tekst\": \"Deze quote totaal vervangen\",\n    \"bronNaam\": \"Henri Korver\",\n    \"bronLink\": \"http://example.com\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "95b15424-0a25-4fb7-b15e-569ddf411356",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful PUT  request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                      "});",
                      "pm.test(\"Body matches string\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"Deze quote totaal vervange\");",
                      "});"
                    ],
                    "_lastExecutionId": "6b93167e-6ae2-4cfd-988a-02393c1b00bd"
                  }
                }
              ]
            },
            {
              "id": "d967b614-cb95-40b5-9a32-bda7eba20de6",
              "name": "Pas een quote gedeeltelijk aan",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"tekst\": \"Deze quote is alleen in dit veld aangepast\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dc780489-1ebc-4517-b999-7cf543057b99",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful PATCH  request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                      "});"
                    ],
                    "_lastExecutionId": "a4c7456d-9d99-46bd-8828-90e5c431973e"
                  }
                }
              ]
            },
            {
              "id": "7b4c574e-c909-404d-94fe-d260cfaa0e07",
              "name": "Verwijder een quote",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "591fd68f-84ab-4069-bf3e-fc788ea97906",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful DELETE request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([204]);",
                      "});"
                    ],
                    "_lastExecutionId": "cf38b292-04d5-4245-8f04-15d3fc3dba69"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "1b28bc03-b06c-4b70-92d5-710fb537f7e7",
          "length": 7,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2ed781dd-0275-49ee-8b14-b3ddc30248e8"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Successful PATCH  request",
          "message": "expected undefined to be one of [ 200 ]",
          "stack": "AssertionError: expected undefined to be one of [ 200 ]\n   at Object.eval sandbox-script.js:1:6)",
          "checksum": "675a8300008329e1d40564c2a8c73d81",
          "id": "40863654-5c09-4a4c-9346-55d2bcf4430f",
          "timestamp": 1563368703620,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 6,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "d967b614-cb95-40b5-9a32-bda7eba20de6",
          "name": "Pas een quote gedeeltelijk aan",
          "request": {
            "url": {
              "host": [
                "{{quote}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"tekst\": \"Deze quote is alleen in dit veld aangepast\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dc780489-1ebc-4517-b999-7cf543057b99",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Successful PATCH  request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                  "});"
                ],
                "_lastExecutionId": "a4c7456d-9d99-46bd-8828-90e5c431973e"
              }
            }
          ]
        },
        "parent": {
          "id": "bb89aa33-7534-432d-98c6-667a60f8f22f",
          "name": "part2",
          "item": [
            {
              "id": "024b2821-921f-4726-a262-75468980ac42",
              "name": "Vervang quote in zijn geheel",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tekst\": \"Deze quote totaal vervangen\",\n    \"bronNaam\": \"Henri Korver\",\n    \"bronLink\": \"http://example.com\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "95b15424-0a25-4fb7-b15e-569ddf411356",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful PUT  request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                      "});",
                      "pm.test(\"Body matches string\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"Deze quote totaal vervange\");",
                      "});"
                    ],
                    "_lastExecutionId": "6b93167e-6ae2-4cfd-988a-02393c1b00bd"
                  }
                }
              ]
            },
            {
              "id": "d967b614-cb95-40b5-9a32-bda7eba20de6",
              "name": "Pas een quote gedeeltelijk aan",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"tekst\": \"Deze quote is alleen in dit veld aangepast\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dc780489-1ebc-4517-b999-7cf543057b99",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful PATCH  request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                      "});"
                    ],
                    "_lastExecutionId": "a4c7456d-9d99-46bd-8828-90e5c431973e"
                  }
                }
              ]
            },
            {
              "id": "7b4c574e-c909-404d-94fe-d260cfaa0e07",
              "name": "Verwijder een quote",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "591fd68f-84ab-4069-bf3e-fc788ea97906",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful DELETE request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([204]);",
                      "});"
                    ],
                    "_lastExecutionId": "cf38b292-04d5-4245-8f04-15d3fc3dba69"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "1b28bc03-b06c-4b70-92d5-710fb537f7e7",
          "length": 7,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2ed781dd-0275-49ee-8b14-b3ddc30248e8",
          "scriptId": "dc780489-1ebc-4517-b999-7cf543057b99",
          "execution": "a4c7456d-9d99-46bd-8828-90e5c431973e"
        }
      },
      {
        "error": {
          "name": "Error",
          "message": "Invalid URI \"http:///%7B%7Bquote%7D%7D\"",
          "stack": "Error: Invalid URI \"http:///%7B%7Bquote%7D%7D\"\n    at Request.init (/home/projects/env/vng/node_modules/postman-request/request.js:343:31)\n    at new Request (/home/projects/env/vng/node_modules/postman-request/request.js:170:8)\n    at request (/home/projects/env/vng/node_modules/postman-request/index.js:47:10)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:74:23\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:473:16\n    at next (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5329:29)\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:969:16\n    at setCertificate (/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:40:20)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:69:13\n    at nextTask (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5324:14)\n    at next (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5331:9)\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:969:16\n    at setProxy (/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:21:9)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:66:13\n    at nextTask (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5324:14)\n    at Object.waterfall (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5334:5)",
          "checksum": "56c29b1a5b508419aba963e964b54b96",
          "id": "6f217408-01ed-40e3-bf87-14980fdbd660",
          "timestamp": 1563368703637,
          "stacktrace": [
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/request.js",
              "lineNumber": 343,
              "functionName": "Request.init",
              "typeName": "Request",
              "methodName": "init",
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/request.js",
              "lineNumber": 170,
              "functionName": "new Request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/index.js",
              "lineNumber": 47,
              "functionName": "request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 10,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 74,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 23,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 473,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5329,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 29,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 40,
              "functionName": "setCertificate",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 69,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5331,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 21,
              "functionName": "setProxy",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 66,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5334,
              "functionName": "Object.waterfall",
              "typeName": "Object",
              "methodName": "waterfall",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "7b4c574e-c909-404d-94fe-d260cfaa0e07",
          "name": "Verwijder een quote",
          "request": {
            "url": {
              "host": [
                "{{quote}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "591fd68f-84ab-4069-bf3e-fc788ea97906",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Successful DELETE request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([204]);",
                  "});"
                ],
                "_lastExecutionId": "cf38b292-04d5-4245-8f04-15d3fc3dba69"
              }
            }
          ]
        },
        "parent": {
          "id": "bb89aa33-7534-432d-98c6-667a60f8f22f",
          "name": "part2",
          "item": [
            {
              "id": "024b2821-921f-4726-a262-75468980ac42",
              "name": "Vervang quote in zijn geheel",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tekst\": \"Deze quote totaal vervangen\",\n    \"bronNaam\": \"Henri Korver\",\n    \"bronLink\": \"http://example.com\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "95b15424-0a25-4fb7-b15e-569ddf411356",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful PUT  request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                      "});",
                      "pm.test(\"Body matches string\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"Deze quote totaal vervange\");",
                      "});"
                    ],
                    "_lastExecutionId": "6b93167e-6ae2-4cfd-988a-02393c1b00bd"
                  }
                }
              ]
            },
            {
              "id": "d967b614-cb95-40b5-9a32-bda7eba20de6",
              "name": "Pas een quote gedeeltelijk aan",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"tekst\": \"Deze quote is alleen in dit veld aangepast\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dc780489-1ebc-4517-b999-7cf543057b99",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful PATCH  request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                      "});"
                    ],
                    "_lastExecutionId": "a4c7456d-9d99-46bd-8828-90e5c431973e"
                  }
                }
              ]
            },
            {
              "id": "7b4c574e-c909-404d-94fe-d260cfaa0e07",
              "name": "Verwijder een quote",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "591fd68f-84ab-4069-bf3e-fc788ea97906",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful DELETE request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([204]);",
                      "});"
                    ],
                    "_lastExecutionId": "cf38b292-04d5-4245-8f04-15d3fc3dba69"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "83206870-cb56-40a7-a176-907420e1b226",
          "length": 7,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ef5c585f-4a74-49e5-87dc-6104c76672b4"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Successful DELETE request",
          "message": "expected undefined to be one of [ 204 ]",
          "stack": "AssertionError: expected undefined to be one of [ 204 ]\n   at Object.eval sandbox-script.js:1:7)",
          "checksum": "1181bf70613a2b42f709e860dfe3be91",
          "id": "401872ac-332e-4ae9-be7d-9d6652dfcd16",
          "timestamp": 1563368703647,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "7b4c574e-c909-404d-94fe-d260cfaa0e07",
          "name": "Verwijder een quote",
          "request": {
            "url": {
              "host": [
                "{{quote}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "591fd68f-84ab-4069-bf3e-fc788ea97906",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Successful DELETE request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([204]);",
                  "});"
                ],
                "_lastExecutionId": "cf38b292-04d5-4245-8f04-15d3fc3dba69"
              }
            }
          ]
        },
        "parent": {
          "id": "bb89aa33-7534-432d-98c6-667a60f8f22f",
          "name": "part2",
          "item": [
            {
              "id": "024b2821-921f-4726-a262-75468980ac42",
              "name": "Vervang quote in zijn geheel",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tekst\": \"Deze quote totaal vervangen\",\n    \"bronNaam\": \"Henri Korver\",\n    \"bronLink\": \"http://example.com\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "95b15424-0a25-4fb7-b15e-569ddf411356",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful PUT  request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                      "});",
                      "pm.test(\"Body matches string\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"Deze quote totaal vervange\");",
                      "});"
                    ],
                    "_lastExecutionId": "6b93167e-6ae2-4cfd-988a-02393c1b00bd"
                  }
                }
              ]
            },
            {
              "id": "d967b614-cb95-40b5-9a32-bda7eba20de6",
              "name": "Pas een quote gedeeltelijk aan",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"tekst\": \"Deze quote is alleen in dit veld aangepast\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dc780489-1ebc-4517-b999-7cf543057b99",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful PATCH  request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                      "});"
                    ],
                    "_lastExecutionId": "a4c7456d-9d99-46bd-8828-90e5c431973e"
                  }
                }
              ]
            },
            {
              "id": "7b4c574e-c909-404d-94fe-d260cfaa0e07",
              "name": "Verwijder een quote",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "591fd68f-84ab-4069-bf3e-fc788ea97906",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful DELETE request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([204]);",
                      "});"
                    ],
                    "_lastExecutionId": "cf38b292-04d5-4245-8f04-15d3fc3dba69"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "83206870-cb56-40a7-a176-907420e1b226",
          "length": 7,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ef5c585f-4a74-49e5-87dc-6104c76672b4",
          "scriptId": "591fd68f-84ab-4069-bf3e-fc788ea97906",
          "execution": "cf38b292-04d5-4245-8f04-15d3fc3dba69"
        }
      }
    ],
    "error": null
  }
}