{
  "collection": {
    "_": {
      "postman_id": "530deb8d-e50f-4554-8e63-c499bff26d8e"
    },
    "item": [
      {
        "id": "6cf3c599-7ea8-4877-8fef-eb3539a0f30f",
        "name": "part1",
        "item": [
          {
            "_": {
              "postman_isSubFolder": true
            },
            "id": "c7046652-32f0-4b90-ad18-e6769ff01483",
            "name": "d",
            "item": [
              {
                "id": "998e441a-0e85-41c0-a89d-6e1a73a4795f",
                "name": "test",
                "request": {
                  "url": {
                    "host": [
                      "tesst subsub"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {
                    "mode": "raw",
                    "raw": ""
                  }
                },
                "response": [],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "225e1219-e5f6-4318-ace8-1d42a8d08654",
            "name": "Create a quote",
            "request": {
              "url": {
                "path": [
                  "quotes"
                ],
                "host": [
                  "{{demo-api}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "name": "Content-Type",
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n    \"tekst\": \"To be or to be\",\n    \"bronNaam\": \"Shakespeare 3\",\n    \"bronLink\": \"http://citation.org\"\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b01fe77f-681c-4107-bcaa-bb42450d2bcd",
                  "type": "text/javascript",
                  "exec": [
                    "var quote = pm.response.json();",
                    "pm.globals.set(\"quote\", quote.url );  ",
                    "",
                    "pm.test(\"Successful POST request\", function () {",
                    "    pm.expect(pm.response.code).to.be.oneOf([201]);",
                    "});",
                    ""
                  ],
                  "_lastExecutionId": "902cbd42-dd33-4a0e-95d4-bc11fb87cf19"
                }
              }
            ]
          },
          {
            "id": "dc03cd8d-518f-4e9a-8052-39458a65f1a3",
            "name": "Vraag alle quotes op",
            "request": {
              "url": {
                "path": [
                  "quotes"
                ],
                "host": [
                  "{{demo-api}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "59ec48c9-65be-4364-b07e-e999c439b77a",
                  "type": "text/javascript",
                  "exec": [
                    "//var quotes = pm.response.json();",
                    "//pm.globals.set(\"eerste_quote\", quotes.results[0].url );  //eerste quote uit de lijst",
                    "",
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});"
                  ],
                  "_lastExecutionId": "3e962a1c-c6e0-4c19-93ad-2c6dcdaf2e16"
                }
              }
            ]
          },
          {
            "id": "8934d8f2-65bc-4e4a-b49a-54854a2ab294",
            "name": "Vraag een specifieke quote op",
            "request": {
              "url": {
                "host": [
                  "{{quote}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "c4265920-3b31-4cd4-877e-59223d3c3137",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});"
                  ],
                  "_lastExecutionId": "c6fd8f78-f00f-4588-b5db-34b39802819a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9c8bee3c-72fb-4f75-9314-19373fab6b90",
        "name": "part2",
        "item": [
          {
            "id": "0077dd66-4794-450e-b598-2888c1333059",
            "name": "Vervang quote in zijn geheel",
            "request": {
              "url": {
                "host": [
                  "{{quote}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "name": "Content-Type",
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "PUT",
              "body": {
                "mode": "raw",
                "raw": "{\n    \"tekst\": \"Deze quote totaal vervangen\",\n    \"bronNaam\": \"Henri Korver\",\n    \"bronLink\": \"http://example.com\"\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "95b15424-0a25-4fb7-b15e-569ddf411356",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Successful PUT  request\", function () {",
                    "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                    "});",
                    "pm.test(\"Body matches string\", function () {",
                    "    pm.expect(pm.response.text()).to.include(\"Deze quote totaal vervange\");",
                    "});"
                  ],
                  "_lastExecutionId": "fa3d1c8b-c658-4c87-8103-9f7745451d31"
                }
              }
            ]
          },
          {
            "id": "68d8d1a4-a1b0-4bec-9dfd-c9771bd01a40",
            "name": "Pas een quote gedeeltelijk aan",
            "request": {
              "url": {
                "host": [
                  "{{quote}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "name": "Content-Type",
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "PATCH",
              "body": {
                "mode": "raw",
                "raw": "{\n\t\"tekst\": \"Deze quote is alleen in dit veld aangepast\"\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "dc780489-1ebc-4517-b999-7cf543057b99",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Successful PATCH  request\", function () {",
                    "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                    "});"
                  ],
                  "_lastExecutionId": "3abfe43b-7556-477c-b8ee-beb3f57c8565"
                }
              }
            ]
          },
          {
            "id": "4e048e3f-c9a6-43c8-8d70-67436f0c759b",
            "name": "Verwijder een quote",
            "request": {
              "url": {
                "host": [
                  "{{quote}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "DELETE",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "591fd68f-84ab-4069-bf3e-fc788ea97906",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Successful DELETE request\", function () {",
                    "    pm.expect(pm.response.code).to.be.oneOf([204]);",
                    "});"
                  ],
                  "_lastExecutionId": "dda6b022-da22-4e1b-9cf0-47b51a4cacc1"
                }
              }
            ]
          }
        ],
        "event": []
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "00cc8921-920d-499f-b775-df0f6d3639ec",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "2264b64f-d5a3-4407-9948-cb370bdff57d"
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "1b66d4e0-ae28-4b50-8bef-8c5ebd26db81",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "809042a3-b440-466b-943f-d2e07fb95516"
        }
      }
    ],
    "variable": [],
    "info": {
      "_postman_id": "530deb8d-e50f-4554-8e63-c499bff26d8e",
      "name": "demo-api client  with folders",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "id": "3de05e73-fc00-4cfb-8800-882bbcea7baf",
    "values": []
  },
  "globals": {
    "id": "6bc1f64c-2eb0-441a-bc53-3b26f3722c17",
    "values": [
      {
        "type": "any",
        "value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImNsaWVudF9pZGVudGlmaWVyIjoiaHR0cHM6Ly93d3cuZXhhbXBsZS5jb20ifQ.eyJpc3MiOiJodHRwczovL3d3dy5leGFtcGxlLmNvbSIsImlhdCI6MTU2MzM2ODY5OSwiemRzIjp7InNjb3BlcyI6WyJ6ZHMuc2NvcGVzLnpha2VuLmxlemVuIiwiemRzLnNjb3Blcy56YWFrdHlwZXMubGV6ZW4iLCJ6ZHMuc2NvcGVzLnpha2VuLmFhbm1ha2VuIiwiemRzLnNjb3Blcy5zdGF0dXNzZW4udG9ldm9lZ2VuIiwiemRzLnNjb3Blcy56YWtlbi5iaWp3ZXJrZW4iXSwiemFha3R5cGVzIjpbIioiXX19.VMynnrS8EbAy463VGP4XBR6Jqn9EURHSDaNvtH4Gjsw",
        "key": "BEARER_TOKEN"
      },
      {
        "type": "any",
        "value": "https://www.example.com",
        "key": "test-url2"
      },
      {
        "type": "any",
        "value": "https://www.example.com",
        "key": "test-url3"
      },
      {
        "type": "any",
        "value": "https://www.example.com",
        "key": "test-content"
      },
      {
        "type": "any",
        "value": "https://www.example.com",
        "key": "test-url1"
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 20,
        "pending": 0,
        "failed": 1
      },
      "prerequests": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 7,
        "pending": 0,
        "failed": 7
      },
      "tests": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 6,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 13,
        "pending": 0,
        "failed": 1
      },
      "prerequestScripts": {
        "total": 7,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 0,
      "responseMin": 0,
      "responseMax": 0,
      "responseSd": 0,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1563368725113,
      "completed": 1563368725399
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 7,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1fa177da-c53f-423a-8eeb-c0b5ef0d2018",
          "httpRequestId": "bc3d82f5-c08d-45f7-b29a-35bb61fa6d42"
        },
        "item": {
          "id": "998e441a-0e85-41c0-a89d-6e1a73a4795f",
          "name": "test",
          "request": {
            "url": {
              "host": [
                "tesst subsub"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": []
        },
        "request": {
          "url": {
            "host": [
              "tesst subsub"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "id": "998e441a-0e85-41c0-a89d-6e1a73a4795f",
        "requestError": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "tesst"
        }
      },
      {
        "cursor": {
          "ref": "4b82274a-f334-4283-b8f0-50bd3f720323",
          "length": 7,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c77e48f2-2a1c-4afd-be05-7472b43cb2b9"
        },
        "item": {
          "id": "225e1219-e5f6-4318-ace8-1d42a8d08654",
          "name": "Create a quote",
          "request": {
            "url": {
              "path": [
                "quotes"
              ],
              "host": [
                "{{demo-api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"tekst\": \"To be or to be\",\n    \"bronNaam\": \"Shakespeare 3\",\n    \"bronLink\": \"http://citation.org\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b01fe77f-681c-4107-bcaa-bb42450d2bcd",
                "type": "text/javascript",
                "exec": [
                  "var quote = pm.response.json();",
                  "pm.globals.set(\"quote\", quote.url );  ",
                  "",
                  "pm.test(\"Successful POST request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([201]);",
                  "});",
                  ""
                ],
                "_lastExecutionId": "902cbd42-dd33-4a0e-95d4-bc11fb87cf19"
              }
            }
          ]
        },
        "request": {
          "url": {
            "path": [
              "quotes"
            ],
            "host": [
              "{{demo-api}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"tekst\": \"To be or to be\",\n    \"bronNaam\": \"Shakespeare 3\",\n    \"bronLink\": \"http://citation.org\"\n}"
          }
        },
        "id": "225e1219-e5f6-4318-ace8-1d42a8d08654",
        "requestError": {},
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "JSONError",
              "message": "Unexpected token u in JSON at position 0",
              "checksum": "674c73b0a2e196398fc4e0c640dd47ed",
              "id": "016847a0-b43c-48fd-b02f-c7cb654c264e",
              "timestamp": 1563368725254,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "7f6cf1fd-5169-4d7d-b3f6-b5f8f69698f6",
          "length": 7,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e2ea195c-d10b-4ce0-b565-3afdc89db3aa"
        },
        "item": {
          "id": "dc03cd8d-518f-4e9a-8052-39458a65f1a3",
          "name": "Vraag alle quotes op",
          "request": {
            "url": {
              "path": [
                "quotes"
              ],
              "host": [
                "{{demo-api}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "59ec48c9-65be-4364-b07e-e999c439b77a",
                "type": "text/javascript",
                "exec": [
                  "//var quotes = pm.response.json();",
                  "//pm.globals.set(\"eerste_quote\", quotes.results[0].url );  //eerste quote uit de lijst",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "3e962a1c-c6e0-4c19-93ad-2c6dcdaf2e16"
              }
            }
          ]
        },
        "request": {
          "url": {
            "path": [
              "quotes"
            ],
            "host": [
              "{{demo-api}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "id": "dc03cd8d-518f-4e9a-8052-39458a65f1a3",
        "requestError": {},
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:3)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "9c1aa76f-1ac3-40b5-a094-f88a76e41664",
          "length": 7,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7c865b96-1429-4653-8bbc-ad0a6bc02b50"
        },
        "item": {
          "id": "8934d8f2-65bc-4e4a-b49a-54854a2ab294",
          "name": "Vraag een specifieke quote op",
          "request": {
            "url": {
              "host": [
                "{{quote}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c4265920-3b31-4cd4-877e-59223d3c3137",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "c6fd8f78-f00f-4588-b5db-34b39802819a"
              }
            }
          ]
        },
        "request": {
          "url": {
            "host": [
              "{{quote}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "id": "8934d8f2-65bc-4e4a-b49a-54854a2ab294",
        "requestError": {},
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:4)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "a7ed5a86-e76c-412b-a95f-c57d864a1d5e",
          "length": 7,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "974a32e6-c378-47d5-998a-5b81b3b30811"
        },
        "item": {
          "id": "0077dd66-4794-450e-b598-2888c1333059",
          "name": "Vervang quote in zijn geheel",
          "request": {
            "url": {
              "host": [
                "{{quote}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"tekst\": \"Deze quote totaal vervangen\",\n    \"bronNaam\": \"Henri Korver\",\n    \"bronLink\": \"http://example.com\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "95b15424-0a25-4fb7-b15e-569ddf411356",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Successful PUT  request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                  "});",
                  "pm.test(\"Body matches string\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"Deze quote totaal vervange\");",
                  "});"
                ],
                "_lastExecutionId": "fa3d1c8b-c658-4c87-8103-9f7745451d31"
              }
            }
          ]
        },
        "request": {
          "url": {
            "host": [
              "{{quote}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"tekst\": \"Deze quote totaal vervangen\",\n    \"bronNaam\": \"Henri Korver\",\n    \"bronLink\": \"http://example.com\"\n}"
          }
        },
        "id": "0077dd66-4794-450e-b598-2888c1333059",
        "requestError": {},
        "assertions": [
          {
            "assertion": "Successful PUT  request",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Successful PUT  request",
              "message": "expected undefined to be one of [ 200 ]",
              "stack": "AssertionError: expected undefined to be one of [ 200 ]\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "Body matches string",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Body matches string",
              "message": "object tested must be an array, a map, an object, a set, a string, or a weakset, but undefined given",
              "stack": "AssertionError: object tested must be an array, a map, an object, a set, a string, or a weakset, but undefined given\n   at Object.eval sandbox-script.js:2:5)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "019b973c-b2de-4833-97f6-cbf4189095d2",
          "length": 7,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "bf949097-5581-408d-adf3-fec4398ff4aa"
        },
        "item": {
          "id": "68d8d1a4-a1b0-4bec-9dfd-c9771bd01a40",
          "name": "Pas een quote gedeeltelijk aan",
          "request": {
            "url": {
              "host": [
                "{{quote}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"tekst\": \"Deze quote is alleen in dit veld aangepast\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dc780489-1ebc-4517-b999-7cf543057b99",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Successful PATCH  request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                  "});"
                ],
                "_lastExecutionId": "3abfe43b-7556-477c-b8ee-beb3f57c8565"
              }
            }
          ]
        },
        "request": {
          "url": {
            "host": [
              "{{quote}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\n\t\"tekst\": \"Deze quote is alleen in dit veld aangepast\"\n}"
          }
        },
        "id": "68d8d1a4-a1b0-4bec-9dfd-c9771bd01a40",
        "requestError": {},
        "assertions": [
          {
            "assertion": "Successful PATCH  request",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Successful PATCH  request",
              "message": "expected undefined to be one of [ 200 ]",
              "stack": "AssertionError: expected undefined to be one of [ 200 ]\n   at Object.eval sandbox-script.js:1:6)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "a641d818-06a7-4dd2-97b7-48d8cadbae4a",
          "length": 7,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e85cb2e8-dcde-4f26-aaa8-5c2c9cd42ccb"
        },
        "item": {
          "id": "4e048e3f-c9a6-43c8-8d70-67436f0c759b",
          "name": "Verwijder een quote",
          "request": {
            "url": {
              "host": [
                "{{quote}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "591fd68f-84ab-4069-bf3e-fc788ea97906",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Successful DELETE request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([204]);",
                  "});"
                ],
                "_lastExecutionId": "dda6b022-da22-4e1b-9cf0-47b51a4cacc1"
              }
            }
          ]
        },
        "request": {
          "url": {
            "host": [
              "{{quote}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "id": "4e048e3f-c9a6-43c8-8d70-67436f0c759b",
        "requestError": {},
        "assertions": [
          {
            "assertion": "Successful DELETE request",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Successful DELETE request",
              "message": "expected undefined to be one of [ 204 ]",
              "stack": "AssertionError: expected undefined to be one of [ 204 ]\n   at Object.eval sandbox-script.js:1:7)"
            }
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 0
    },
    "failures": [
      {
        "error": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "tesst",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND tesst",
          "stack": "Error: getaddrinfo ENOTFOUND tesst\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:60:26)",
          "checksum": "ca1f2365309354734e47bd6b8d6998fa",
          "id": "1617d008-962a-4bbb-aa14-489185399a76",
          "timestamp": 1563368725212,
          "stacktrace": [
            {
              "fileName": "dns.js",
              "lineNumber": 60,
              "functionName": "GetAddrInfoReqWrap.onlookup [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookup [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "998e441a-0e85-41c0-a89d-6e1a73a4795f",
          "name": "test",
          "request": {
            "url": {
              "host": [
                "tesst subsub"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "_": {
            "postman_isSubFolder": true
          },
          "id": "c7046652-32f0-4b90-ad18-e6769ff01483",
          "name": "d",
          "item": [
            {
              "id": "998e441a-0e85-41c0-a89d-6e1a73a4795f",
              "name": "test",
              "request": {
                "url": {
                  "host": [
                    "tesst subsub"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 7,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1fa177da-c53f-423a-8eeb-c0b5ef0d2018",
          "httpRequestId": "bc3d82f5-c08d-45f7-b29a-35bb61fa6d42"
        }
      },
      {
        "error": {
          "name": "Error",
          "message": "Invalid URI \"http:///%7B%7Bdemo-api%7D%7D/quotes\"",
          "stack": "Error: Invalid URI \"http:///%7B%7Bdemo-api%7D%7D/quotes\"\n    at Request.init (/home/projects/env/vng/node_modules/postman-request/request.js:343:31)\n    at new Request (/home/projects/env/vng/node_modules/postman-request/request.js:170:8)\n    at request (/home/projects/env/vng/node_modules/postman-request/index.js:47:10)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:74:23\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:473:16\n    at next (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5329:29)\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:969:16\n    at setCertificate (/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:40:20)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:69:13\n    at nextTask (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5324:14)\n    at next (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5331:9)\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:969:16\n    at setProxy (/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:21:9)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:66:13\n    at nextTask (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5324:14)\n    at Object.waterfall (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5334:5)",
          "checksum": "511e834023cd2e84e107331cc483836c",
          "id": "d9a9e95a-9f92-4d1e-aa32-6ad6802b62cd",
          "timestamp": 1563368725241,
          "stacktrace": [
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/request.js",
              "lineNumber": 343,
              "functionName": "Request.init",
              "typeName": "Request",
              "methodName": "init",
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/request.js",
              "lineNumber": 170,
              "functionName": "new Request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/index.js",
              "lineNumber": 47,
              "functionName": "request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 10,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 74,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 23,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 473,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5329,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 29,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 40,
              "functionName": "setCertificate",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 69,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5331,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 21,
              "functionName": "setProxy",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 66,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5334,
              "functionName": "Object.waterfall",
              "typeName": "Object",
              "methodName": "waterfall",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "225e1219-e5f6-4318-ace8-1d42a8d08654",
          "name": "Create a quote",
          "request": {
            "url": {
              "path": [
                "quotes"
              ],
              "host": [
                "{{demo-api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"tekst\": \"To be or to be\",\n    \"bronNaam\": \"Shakespeare 3\",\n    \"bronLink\": \"http://citation.org\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b01fe77f-681c-4107-bcaa-bb42450d2bcd",
                "type": "text/javascript",
                "exec": [
                  "var quote = pm.response.json();",
                  "pm.globals.set(\"quote\", quote.url );  ",
                  "",
                  "pm.test(\"Successful POST request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([201]);",
                  "});",
                  ""
                ],
                "_lastExecutionId": "902cbd42-dd33-4a0e-95d4-bc11fb87cf19"
              }
            }
          ]
        },
        "parent": {
          "id": "6cf3c599-7ea8-4877-8fef-eb3539a0f30f",
          "name": "part1",
          "item": [
            {
              "_": {
                "postman_isSubFolder": true
              },
              "id": "c7046652-32f0-4b90-ad18-e6769ff01483",
              "name": "d",
              "item": [
                {
                  "id": "998e441a-0e85-41c0-a89d-6e1a73a4795f",
                  "name": "test",
                  "request": {
                    "url": {
                      "host": [
                        "tesst subsub"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    }
                  },
                  "response": [],
                  "event": []
                }
              ],
              "event": []
            },
            {
              "id": "225e1219-e5f6-4318-ace8-1d42a8d08654",
              "name": "Create a quote",
              "request": {
                "url": {
                  "path": [
                    "quotes"
                  ],
                  "host": [
                    "{{demo-api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tekst\": \"To be or to be\",\n    \"bronNaam\": \"Shakespeare 3\",\n    \"bronLink\": \"http://citation.org\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b01fe77f-681c-4107-bcaa-bb42450d2bcd",
                    "type": "text/javascript",
                    "exec": [
                      "var quote = pm.response.json();",
                      "pm.globals.set(\"quote\", quote.url );  ",
                      "",
                      "pm.test(\"Successful POST request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([201]);",
                      "});",
                      ""
                    ],
                    "_lastExecutionId": "902cbd42-dd33-4a0e-95d4-bc11fb87cf19"
                  }
                }
              ]
            },
            {
              "id": "dc03cd8d-518f-4e9a-8052-39458a65f1a3",
              "name": "Vraag alle quotes op",
              "request": {
                "url": {
                  "path": [
                    "quotes"
                  ],
                  "host": [
                    "{{demo-api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "59ec48c9-65be-4364-b07e-e999c439b77a",
                    "type": "text/javascript",
                    "exec": [
                      "//var quotes = pm.response.json();",
                      "//pm.globals.set(\"eerste_quote\", quotes.results[0].url );  //eerste quote uit de lijst",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "3e962a1c-c6e0-4c19-93ad-2c6dcdaf2e16"
                  }
                }
              ]
            },
            {
              "id": "8934d8f2-65bc-4e4a-b49a-54854a2ab294",
              "name": "Vraag een specifieke quote op",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4265920-3b31-4cd4-877e-59223d3c3137",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "c6fd8f78-f00f-4588-b5db-34b39802819a"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "4b82274a-f334-4283-b8f0-50bd3f720323",
          "length": 7,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c77e48f2-2a1c-4afd-be05-7472b43cb2b9"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "JSONError",
          "message": "Unexpected token u in JSON at position 0",
          "checksum": "674c73b0a2e196398fc4e0c640dd47ed",
          "id": "016847a0-b43c-48fd-b02f-c7cb654c264e",
          "timestamp": 1563368725254,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "225e1219-e5f6-4318-ace8-1d42a8d08654",
          "name": "Create a quote",
          "request": {
            "url": {
              "path": [
                "quotes"
              ],
              "host": [
                "{{demo-api}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"tekst\": \"To be or to be\",\n    \"bronNaam\": \"Shakespeare 3\",\n    \"bronLink\": \"http://citation.org\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b01fe77f-681c-4107-bcaa-bb42450d2bcd",
                "type": "text/javascript",
                "exec": [
                  "var quote = pm.response.json();",
                  "pm.globals.set(\"quote\", quote.url );  ",
                  "",
                  "pm.test(\"Successful POST request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([201]);",
                  "});",
                  ""
                ],
                "_lastExecutionId": "902cbd42-dd33-4a0e-95d4-bc11fb87cf19"
              }
            }
          ]
        },
        "parent": {
          "id": "6cf3c599-7ea8-4877-8fef-eb3539a0f30f",
          "name": "part1",
          "item": [
            {
              "_": {
                "postman_isSubFolder": true
              },
              "id": "c7046652-32f0-4b90-ad18-e6769ff01483",
              "name": "d",
              "item": [
                {
                  "id": "998e441a-0e85-41c0-a89d-6e1a73a4795f",
                  "name": "test",
                  "request": {
                    "url": {
                      "host": [
                        "tesst subsub"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    }
                  },
                  "response": [],
                  "event": []
                }
              ],
              "event": []
            },
            {
              "id": "225e1219-e5f6-4318-ace8-1d42a8d08654",
              "name": "Create a quote",
              "request": {
                "url": {
                  "path": [
                    "quotes"
                  ],
                  "host": [
                    "{{demo-api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tekst\": \"To be or to be\",\n    \"bronNaam\": \"Shakespeare 3\",\n    \"bronLink\": \"http://citation.org\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b01fe77f-681c-4107-bcaa-bb42450d2bcd",
                    "type": "text/javascript",
                    "exec": [
                      "var quote = pm.response.json();",
                      "pm.globals.set(\"quote\", quote.url );  ",
                      "",
                      "pm.test(\"Successful POST request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([201]);",
                      "});",
                      ""
                    ],
                    "_lastExecutionId": "902cbd42-dd33-4a0e-95d4-bc11fb87cf19"
                  }
                }
              ]
            },
            {
              "id": "dc03cd8d-518f-4e9a-8052-39458a65f1a3",
              "name": "Vraag alle quotes op",
              "request": {
                "url": {
                  "path": [
                    "quotes"
                  ],
                  "host": [
                    "{{demo-api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "59ec48c9-65be-4364-b07e-e999c439b77a",
                    "type": "text/javascript",
                    "exec": [
                      "//var quotes = pm.response.json();",
                      "//pm.globals.set(\"eerste_quote\", quotes.results[0].url );  //eerste quote uit de lijst",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "3e962a1c-c6e0-4c19-93ad-2c6dcdaf2e16"
                  }
                }
              ]
            },
            {
              "id": "8934d8f2-65bc-4e4a-b49a-54854a2ab294",
              "name": "Vraag een specifieke quote op",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4265920-3b31-4cd4-877e-59223d3c3137",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "c6fd8f78-f00f-4588-b5db-34b39802819a"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "4b82274a-f334-4283-b8f0-50bd3f720323",
          "length": 7,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c77e48f2-2a1c-4afd-be05-7472b43cb2b9",
          "scriptId": "b01fe77f-681c-4107-bcaa-bb42450d2bcd"
        }
      },
      {
        "error": {
          "name": "Error",
          "message": "Invalid URI \"http:///%7B%7Bdemo-api%7D%7D/quotes\"",
          "stack": "Error: Invalid URI \"http:///%7B%7Bdemo-api%7D%7D/quotes\"\n    at Request.init (/home/projects/env/vng/node_modules/postman-request/request.js:343:31)\n    at new Request (/home/projects/env/vng/node_modules/postman-request/request.js:170:8)\n    at request (/home/projects/env/vng/node_modules/postman-request/index.js:47:10)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:74:23\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:473:16\n    at next (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5329:29)\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:969:16\n    at setCertificate (/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:40:20)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:69:13\n    at nextTask (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5324:14)\n    at next (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5331:9)\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:969:16\n    at setProxy (/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:21:9)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:66:13\n    at nextTask (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5324:14)\n    at Object.waterfall (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5334:5)",
          "checksum": "511e834023cd2e84e107331cc483836c",
          "id": "dc8368df-be99-419d-ba3d-c602d492f6b1",
          "timestamp": 1563368725269,
          "stacktrace": [
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/request.js",
              "lineNumber": 343,
              "functionName": "Request.init",
              "typeName": "Request",
              "methodName": "init",
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/request.js",
              "lineNumber": 170,
              "functionName": "new Request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/index.js",
              "lineNumber": 47,
              "functionName": "request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 10,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 74,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 23,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 473,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5329,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 29,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 40,
              "functionName": "setCertificate",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 69,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5331,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 21,
              "functionName": "setProxy",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 66,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5334,
              "functionName": "Object.waterfall",
              "typeName": "Object",
              "methodName": "waterfall",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "dc03cd8d-518f-4e9a-8052-39458a65f1a3",
          "name": "Vraag alle quotes op",
          "request": {
            "url": {
              "path": [
                "quotes"
              ],
              "host": [
                "{{demo-api}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "59ec48c9-65be-4364-b07e-e999c439b77a",
                "type": "text/javascript",
                "exec": [
                  "//var quotes = pm.response.json();",
                  "//pm.globals.set(\"eerste_quote\", quotes.results[0].url );  //eerste quote uit de lijst",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "3e962a1c-c6e0-4c19-93ad-2c6dcdaf2e16"
              }
            }
          ]
        },
        "parent": {
          "id": "6cf3c599-7ea8-4877-8fef-eb3539a0f30f",
          "name": "part1",
          "item": [
            {
              "_": {
                "postman_isSubFolder": true
              },
              "id": "c7046652-32f0-4b90-ad18-e6769ff01483",
              "name": "d",
              "item": [
                {
                  "id": "998e441a-0e85-41c0-a89d-6e1a73a4795f",
                  "name": "test",
                  "request": {
                    "url": {
                      "host": [
                        "tesst subsub"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    }
                  },
                  "response": [],
                  "event": []
                }
              ],
              "event": []
            },
            {
              "id": "225e1219-e5f6-4318-ace8-1d42a8d08654",
              "name": "Create a quote",
              "request": {
                "url": {
                  "path": [
                    "quotes"
                  ],
                  "host": [
                    "{{demo-api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tekst\": \"To be or to be\",\n    \"bronNaam\": \"Shakespeare 3\",\n    \"bronLink\": \"http://citation.org\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b01fe77f-681c-4107-bcaa-bb42450d2bcd",
                    "type": "text/javascript",
                    "exec": [
                      "var quote = pm.response.json();",
                      "pm.globals.set(\"quote\", quote.url );  ",
                      "",
                      "pm.test(\"Successful POST request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([201]);",
                      "});",
                      ""
                    ],
                    "_lastExecutionId": "902cbd42-dd33-4a0e-95d4-bc11fb87cf19"
                  }
                }
              ]
            },
            {
              "id": "dc03cd8d-518f-4e9a-8052-39458a65f1a3",
              "name": "Vraag alle quotes op",
              "request": {
                "url": {
                  "path": [
                    "quotes"
                  ],
                  "host": [
                    "{{demo-api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "59ec48c9-65be-4364-b07e-e999c439b77a",
                    "type": "text/javascript",
                    "exec": [
                      "//var quotes = pm.response.json();",
                      "//pm.globals.set(\"eerste_quote\", quotes.results[0].url );  //eerste quote uit de lijst",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "3e962a1c-c6e0-4c19-93ad-2c6dcdaf2e16"
                  }
                }
              ]
            },
            {
              "id": "8934d8f2-65bc-4e4a-b49a-54854a2ab294",
              "name": "Vraag een specifieke quote op",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4265920-3b31-4cd4-877e-59223d3c3137",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "c6fd8f78-f00f-4588-b5db-34b39802819a"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "7f6cf1fd-5169-4d7d-b3f6-b5f8f69698f6",
          "length": 7,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e2ea195c-d10b-4ce0-b565-3afdc89db3aa"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:3)",
          "checksum": "bd291fd6636fa58b6be1d6a9c5c383ff",
          "id": "ae4fd6db-2a8a-47d4-a756-369216786325",
          "timestamp": 1563368725287,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "dc03cd8d-518f-4e9a-8052-39458a65f1a3",
          "name": "Vraag alle quotes op",
          "request": {
            "url": {
              "path": [
                "quotes"
              ],
              "host": [
                "{{demo-api}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "59ec48c9-65be-4364-b07e-e999c439b77a",
                "type": "text/javascript",
                "exec": [
                  "//var quotes = pm.response.json();",
                  "//pm.globals.set(\"eerste_quote\", quotes.results[0].url );  //eerste quote uit de lijst",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "3e962a1c-c6e0-4c19-93ad-2c6dcdaf2e16"
              }
            }
          ]
        },
        "parent": {
          "id": "6cf3c599-7ea8-4877-8fef-eb3539a0f30f",
          "name": "part1",
          "item": [
            {
              "_": {
                "postman_isSubFolder": true
              },
              "id": "c7046652-32f0-4b90-ad18-e6769ff01483",
              "name": "d",
              "item": [
                {
                  "id": "998e441a-0e85-41c0-a89d-6e1a73a4795f",
                  "name": "test",
                  "request": {
                    "url": {
                      "host": [
                        "tesst subsub"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    }
                  },
                  "response": [],
                  "event": []
                }
              ],
              "event": []
            },
            {
              "id": "225e1219-e5f6-4318-ace8-1d42a8d08654",
              "name": "Create a quote",
              "request": {
                "url": {
                  "path": [
                    "quotes"
                  ],
                  "host": [
                    "{{demo-api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tekst\": \"To be or to be\",\n    \"bronNaam\": \"Shakespeare 3\",\n    \"bronLink\": \"http://citation.org\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b01fe77f-681c-4107-bcaa-bb42450d2bcd",
                    "type": "text/javascript",
                    "exec": [
                      "var quote = pm.response.json();",
                      "pm.globals.set(\"quote\", quote.url );  ",
                      "",
                      "pm.test(\"Successful POST request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([201]);",
                      "});",
                      ""
                    ],
                    "_lastExecutionId": "902cbd42-dd33-4a0e-95d4-bc11fb87cf19"
                  }
                }
              ]
            },
            {
              "id": "dc03cd8d-518f-4e9a-8052-39458a65f1a3",
              "name": "Vraag alle quotes op",
              "request": {
                "url": {
                  "path": [
                    "quotes"
                  ],
                  "host": [
                    "{{demo-api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "59ec48c9-65be-4364-b07e-e999c439b77a",
                    "type": "text/javascript",
                    "exec": [
                      "//var quotes = pm.response.json();",
                      "//pm.globals.set(\"eerste_quote\", quotes.results[0].url );  //eerste quote uit de lijst",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "3e962a1c-c6e0-4c19-93ad-2c6dcdaf2e16"
                  }
                }
              ]
            },
            {
              "id": "8934d8f2-65bc-4e4a-b49a-54854a2ab294",
              "name": "Vraag een specifieke quote op",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4265920-3b31-4cd4-877e-59223d3c3137",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "c6fd8f78-f00f-4588-b5db-34b39802819a"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "7f6cf1fd-5169-4d7d-b3f6-b5f8f69698f6",
          "length": 7,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e2ea195c-d10b-4ce0-b565-3afdc89db3aa",
          "scriptId": "59ec48c9-65be-4364-b07e-e999c439b77a",
          "execution": "3e962a1c-c6e0-4c19-93ad-2c6dcdaf2e16"
        }
      },
      {
        "error": {
          "name": "Error",
          "message": "Invalid URI \"http:///%7B%7Bquote%7D%7D\"",
          "stack": "Error: Invalid URI \"http:///%7B%7Bquote%7D%7D\"\n    at Request.init (/home/projects/env/vng/node_modules/postman-request/request.js:343:31)\n    at new Request (/home/projects/env/vng/node_modules/postman-request/request.js:170:8)\n    at request (/home/projects/env/vng/node_modules/postman-request/index.js:47:10)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:74:23\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:473:16\n    at next (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5329:29)\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:969:16\n    at setCertificate (/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:40:20)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:69:13\n    at nextTask (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5324:14)\n    at next (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5331:9)\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:969:16\n    at setProxy (/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:21:9)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:66:13\n    at nextTask (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5324:14)\n    at Object.waterfall (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5334:5)",
          "checksum": "56c29b1a5b508419aba963e964b54b96",
          "id": "58dd8861-c73f-436f-9195-49e7e81da35e",
          "timestamp": 1563368725306,
          "stacktrace": [
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/request.js",
              "lineNumber": 343,
              "functionName": "Request.init",
              "typeName": "Request",
              "methodName": "init",
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/request.js",
              "lineNumber": 170,
              "functionName": "new Request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/index.js",
              "lineNumber": 47,
              "functionName": "request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 10,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 74,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 23,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 473,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5329,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 29,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 40,
              "functionName": "setCertificate",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 69,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5331,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 21,
              "functionName": "setProxy",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 66,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5334,
              "functionName": "Object.waterfall",
              "typeName": "Object",
              "methodName": "waterfall",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "8934d8f2-65bc-4e4a-b49a-54854a2ab294",
          "name": "Vraag een specifieke quote op",
          "request": {
            "url": {
              "host": [
                "{{quote}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c4265920-3b31-4cd4-877e-59223d3c3137",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "c6fd8f78-f00f-4588-b5db-34b39802819a"
              }
            }
          ]
        },
        "parent": {
          "id": "6cf3c599-7ea8-4877-8fef-eb3539a0f30f",
          "name": "part1",
          "item": [
            {
              "_": {
                "postman_isSubFolder": true
              },
              "id": "c7046652-32f0-4b90-ad18-e6769ff01483",
              "name": "d",
              "item": [
                {
                  "id": "998e441a-0e85-41c0-a89d-6e1a73a4795f",
                  "name": "test",
                  "request": {
                    "url": {
                      "host": [
                        "tesst subsub"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    }
                  },
                  "response": [],
                  "event": []
                }
              ],
              "event": []
            },
            {
              "id": "225e1219-e5f6-4318-ace8-1d42a8d08654",
              "name": "Create a quote",
              "request": {
                "url": {
                  "path": [
                    "quotes"
                  ],
                  "host": [
                    "{{demo-api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tekst\": \"To be or to be\",\n    \"bronNaam\": \"Shakespeare 3\",\n    \"bronLink\": \"http://citation.org\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b01fe77f-681c-4107-bcaa-bb42450d2bcd",
                    "type": "text/javascript",
                    "exec": [
                      "var quote = pm.response.json();",
                      "pm.globals.set(\"quote\", quote.url );  ",
                      "",
                      "pm.test(\"Successful POST request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([201]);",
                      "});",
                      ""
                    ],
                    "_lastExecutionId": "902cbd42-dd33-4a0e-95d4-bc11fb87cf19"
                  }
                }
              ]
            },
            {
              "id": "dc03cd8d-518f-4e9a-8052-39458a65f1a3",
              "name": "Vraag alle quotes op",
              "request": {
                "url": {
                  "path": [
                    "quotes"
                  ],
                  "host": [
                    "{{demo-api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "59ec48c9-65be-4364-b07e-e999c439b77a",
                    "type": "text/javascript",
                    "exec": [
                      "//var quotes = pm.response.json();",
                      "//pm.globals.set(\"eerste_quote\", quotes.results[0].url );  //eerste quote uit de lijst",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "3e962a1c-c6e0-4c19-93ad-2c6dcdaf2e16"
                  }
                }
              ]
            },
            {
              "id": "8934d8f2-65bc-4e4a-b49a-54854a2ab294",
              "name": "Vraag een specifieke quote op",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4265920-3b31-4cd4-877e-59223d3c3137",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "c6fd8f78-f00f-4588-b5db-34b39802819a"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "9c1aa76f-1ac3-40b5-a094-f88a76e41664",
          "length": 7,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7c865b96-1429-4653-8bbc-ad0a6bc02b50"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:4)",
          "checksum": "c61b79a143b5f8899a9762ad2c369493",
          "id": "e98388cb-1784-46f9-819d-da0c595831bb",
          "timestamp": 1563368725317,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "8934d8f2-65bc-4e4a-b49a-54854a2ab294",
          "name": "Vraag een specifieke quote op",
          "request": {
            "url": {
              "host": [
                "{{quote}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c4265920-3b31-4cd4-877e-59223d3c3137",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "c6fd8f78-f00f-4588-b5db-34b39802819a"
              }
            }
          ]
        },
        "parent": {
          "id": "6cf3c599-7ea8-4877-8fef-eb3539a0f30f",
          "name": "part1",
          "item": [
            {
              "_": {
                "postman_isSubFolder": true
              },
              "id": "c7046652-32f0-4b90-ad18-e6769ff01483",
              "name": "d",
              "item": [
                {
                  "id": "998e441a-0e85-41c0-a89d-6e1a73a4795f",
                  "name": "test",
                  "request": {
                    "url": {
                      "host": [
                        "tesst subsub"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    }
                  },
                  "response": [],
                  "event": []
                }
              ],
              "event": []
            },
            {
              "id": "225e1219-e5f6-4318-ace8-1d42a8d08654",
              "name": "Create a quote",
              "request": {
                "url": {
                  "path": [
                    "quotes"
                  ],
                  "host": [
                    "{{demo-api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tekst\": \"To be or to be\",\n    \"bronNaam\": \"Shakespeare 3\",\n    \"bronLink\": \"http://citation.org\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b01fe77f-681c-4107-bcaa-bb42450d2bcd",
                    "type": "text/javascript",
                    "exec": [
                      "var quote = pm.response.json();",
                      "pm.globals.set(\"quote\", quote.url );  ",
                      "",
                      "pm.test(\"Successful POST request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([201]);",
                      "});",
                      ""
                    ],
                    "_lastExecutionId": "902cbd42-dd33-4a0e-95d4-bc11fb87cf19"
                  }
                }
              ]
            },
            {
              "id": "dc03cd8d-518f-4e9a-8052-39458a65f1a3",
              "name": "Vraag alle quotes op",
              "request": {
                "url": {
                  "path": [
                    "quotes"
                  ],
                  "host": [
                    "{{demo-api}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "59ec48c9-65be-4364-b07e-e999c439b77a",
                    "type": "text/javascript",
                    "exec": [
                      "//var quotes = pm.response.json();",
                      "//pm.globals.set(\"eerste_quote\", quotes.results[0].url );  //eerste quote uit de lijst",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "3e962a1c-c6e0-4c19-93ad-2c6dcdaf2e16"
                  }
                }
              ]
            },
            {
              "id": "8934d8f2-65bc-4e4a-b49a-54854a2ab294",
              "name": "Vraag een specifieke quote op",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4265920-3b31-4cd4-877e-59223d3c3137",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "c6fd8f78-f00f-4588-b5db-34b39802819a"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "9c1aa76f-1ac3-40b5-a094-f88a76e41664",
          "length": 7,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7c865b96-1429-4653-8bbc-ad0a6bc02b50",
          "scriptId": "c4265920-3b31-4cd4-877e-59223d3c3137",
          "execution": "c6fd8f78-f00f-4588-b5db-34b39802819a"
        }
      },
      {
        "error": {
          "name": "Error",
          "message": "Invalid URI \"http:///%7B%7Bquote%7D%7D\"",
          "stack": "Error: Invalid URI \"http:///%7B%7Bquote%7D%7D\"\n    at Request.init (/home/projects/env/vng/node_modules/postman-request/request.js:343:31)\n    at new Request (/home/projects/env/vng/node_modules/postman-request/request.js:170:8)\n    at request (/home/projects/env/vng/node_modules/postman-request/index.js:47:10)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:74:23\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:473:16\n    at next (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5329:29)\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:969:16\n    at setCertificate (/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:40:20)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:69:13\n    at nextTask (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5324:14)\n    at next (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5331:9)\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:969:16\n    at setProxy (/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:21:9)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:66:13\n    at nextTask (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5324:14)\n    at Object.waterfall (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5334:5)",
          "checksum": "56c29b1a5b508419aba963e964b54b96",
          "id": "d52ebb25-a540-4069-8bd8-7d943fee493e",
          "timestamp": 1563368725332,
          "stacktrace": [
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/request.js",
              "lineNumber": 343,
              "functionName": "Request.init",
              "typeName": "Request",
              "methodName": "init",
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/request.js",
              "lineNumber": 170,
              "functionName": "new Request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/index.js",
              "lineNumber": 47,
              "functionName": "request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 10,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 74,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 23,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 473,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5329,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 29,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 40,
              "functionName": "setCertificate",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 69,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5331,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 21,
              "functionName": "setProxy",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 66,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5334,
              "functionName": "Object.waterfall",
              "typeName": "Object",
              "methodName": "waterfall",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "0077dd66-4794-450e-b598-2888c1333059",
          "name": "Vervang quote in zijn geheel",
          "request": {
            "url": {
              "host": [
                "{{quote}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"tekst\": \"Deze quote totaal vervangen\",\n    \"bronNaam\": \"Henri Korver\",\n    \"bronLink\": \"http://example.com\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "95b15424-0a25-4fb7-b15e-569ddf411356",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Successful PUT  request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                  "});",
                  "pm.test(\"Body matches string\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"Deze quote totaal vervange\");",
                  "});"
                ],
                "_lastExecutionId": "fa3d1c8b-c658-4c87-8103-9f7745451d31"
              }
            }
          ]
        },
        "parent": {
          "id": "9c8bee3c-72fb-4f75-9314-19373fab6b90",
          "name": "part2",
          "item": [
            {
              "id": "0077dd66-4794-450e-b598-2888c1333059",
              "name": "Vervang quote in zijn geheel",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tekst\": \"Deze quote totaal vervangen\",\n    \"bronNaam\": \"Henri Korver\",\n    \"bronLink\": \"http://example.com\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "95b15424-0a25-4fb7-b15e-569ddf411356",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful PUT  request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                      "});",
                      "pm.test(\"Body matches string\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"Deze quote totaal vervange\");",
                      "});"
                    ],
                    "_lastExecutionId": "fa3d1c8b-c658-4c87-8103-9f7745451d31"
                  }
                }
              ]
            },
            {
              "id": "68d8d1a4-a1b0-4bec-9dfd-c9771bd01a40",
              "name": "Pas een quote gedeeltelijk aan",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"tekst\": \"Deze quote is alleen in dit veld aangepast\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dc780489-1ebc-4517-b999-7cf543057b99",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful PATCH  request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                      "});"
                    ],
                    "_lastExecutionId": "3abfe43b-7556-477c-b8ee-beb3f57c8565"
                  }
                }
              ]
            },
            {
              "id": "4e048e3f-c9a6-43c8-8d70-67436f0c759b",
              "name": "Verwijder een quote",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "591fd68f-84ab-4069-bf3e-fc788ea97906",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful DELETE request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([204]);",
                      "});"
                    ],
                    "_lastExecutionId": "dda6b022-da22-4e1b-9cf0-47b51a4cacc1"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "a7ed5a86-e76c-412b-a95f-c57d864a1d5e",
          "length": 7,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "974a32e6-c378-47d5-998a-5b81b3b30811"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Successful PUT  request",
          "message": "expected undefined to be one of [ 200 ]",
          "stack": "AssertionError: expected undefined to be one of [ 200 ]\n   at Object.eval sandbox-script.js:1:5)",
          "checksum": "5f0107ac25a93770eef18ca3973f73df",
          "id": "1037823b-bab4-48ad-83b6-cfc1eb394343",
          "timestamp": 1563368725343,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "0077dd66-4794-450e-b598-2888c1333059",
          "name": "Vervang quote in zijn geheel",
          "request": {
            "url": {
              "host": [
                "{{quote}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"tekst\": \"Deze quote totaal vervangen\",\n    \"bronNaam\": \"Henri Korver\",\n    \"bronLink\": \"http://example.com\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "95b15424-0a25-4fb7-b15e-569ddf411356",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Successful PUT  request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                  "});",
                  "pm.test(\"Body matches string\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"Deze quote totaal vervange\");",
                  "});"
                ],
                "_lastExecutionId": "fa3d1c8b-c658-4c87-8103-9f7745451d31"
              }
            }
          ]
        },
        "parent": {
          "id": "9c8bee3c-72fb-4f75-9314-19373fab6b90",
          "name": "part2",
          "item": [
            {
              "id": "0077dd66-4794-450e-b598-2888c1333059",
              "name": "Vervang quote in zijn geheel",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tekst\": \"Deze quote totaal vervangen\",\n    \"bronNaam\": \"Henri Korver\",\n    \"bronLink\": \"http://example.com\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "95b15424-0a25-4fb7-b15e-569ddf411356",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful PUT  request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                      "});",
                      "pm.test(\"Body matches string\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"Deze quote totaal vervange\");",
                      "});"
                    ],
                    "_lastExecutionId": "fa3d1c8b-c658-4c87-8103-9f7745451d31"
                  }
                }
              ]
            },
            {
              "id": "68d8d1a4-a1b0-4bec-9dfd-c9771bd01a40",
              "name": "Pas een quote gedeeltelijk aan",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"tekst\": \"Deze quote is alleen in dit veld aangepast\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dc780489-1ebc-4517-b999-7cf543057b99",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful PATCH  request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                      "});"
                    ],
                    "_lastExecutionId": "3abfe43b-7556-477c-b8ee-beb3f57c8565"
                  }
                }
              ]
            },
            {
              "id": "4e048e3f-c9a6-43c8-8d70-67436f0c759b",
              "name": "Verwijder een quote",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "591fd68f-84ab-4069-bf3e-fc788ea97906",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful DELETE request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([204]);",
                      "});"
                    ],
                    "_lastExecutionId": "dda6b022-da22-4e1b-9cf0-47b51a4cacc1"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "a7ed5a86-e76c-412b-a95f-c57d864a1d5e",
          "length": 7,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "974a32e6-c378-47d5-998a-5b81b3b30811",
          "scriptId": "95b15424-0a25-4fb7-b15e-569ddf411356",
          "execution": "fa3d1c8b-c658-4c87-8103-9f7745451d31"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Body matches string",
          "message": "object tested must be an array, a map, an object, a set, a string, or a weakset, but undefined given",
          "stack": "AssertionError: object tested must be an array, a map, an object, a set, a string, or a weakset, but undefined given\n   at Object.eval sandbox-script.js:2:5)",
          "checksum": "370ccad574185f80f86a0ce31d7fc287",
          "id": "683ad587-0d5d-4373-9ef4-10b825d325cc",
          "timestamp": 1563368725344,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "0077dd66-4794-450e-b598-2888c1333059",
          "name": "Vervang quote in zijn geheel",
          "request": {
            "url": {
              "host": [
                "{{quote}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"tekst\": \"Deze quote totaal vervangen\",\n    \"bronNaam\": \"Henri Korver\",\n    \"bronLink\": \"http://example.com\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "95b15424-0a25-4fb7-b15e-569ddf411356",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Successful PUT  request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                  "});",
                  "pm.test(\"Body matches string\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"Deze quote totaal vervange\");",
                  "});"
                ],
                "_lastExecutionId": "fa3d1c8b-c658-4c87-8103-9f7745451d31"
              }
            }
          ]
        },
        "parent": {
          "id": "9c8bee3c-72fb-4f75-9314-19373fab6b90",
          "name": "part2",
          "item": [
            {
              "id": "0077dd66-4794-450e-b598-2888c1333059",
              "name": "Vervang quote in zijn geheel",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tekst\": \"Deze quote totaal vervangen\",\n    \"bronNaam\": \"Henri Korver\",\n    \"bronLink\": \"http://example.com\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "95b15424-0a25-4fb7-b15e-569ddf411356",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful PUT  request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                      "});",
                      "pm.test(\"Body matches string\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"Deze quote totaal vervange\");",
                      "});"
                    ],
                    "_lastExecutionId": "fa3d1c8b-c658-4c87-8103-9f7745451d31"
                  }
                }
              ]
            },
            {
              "id": "68d8d1a4-a1b0-4bec-9dfd-c9771bd01a40",
              "name": "Pas een quote gedeeltelijk aan",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"tekst\": \"Deze quote is alleen in dit veld aangepast\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dc780489-1ebc-4517-b999-7cf543057b99",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful PATCH  request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                      "});"
                    ],
                    "_lastExecutionId": "3abfe43b-7556-477c-b8ee-beb3f57c8565"
                  }
                }
              ]
            },
            {
              "id": "4e048e3f-c9a6-43c8-8d70-67436f0c759b",
              "name": "Verwijder een quote",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "591fd68f-84ab-4069-bf3e-fc788ea97906",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful DELETE request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([204]);",
                      "});"
                    ],
                    "_lastExecutionId": "dda6b022-da22-4e1b-9cf0-47b51a4cacc1"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "a7ed5a86-e76c-412b-a95f-c57d864a1d5e",
          "length": 7,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "974a32e6-c378-47d5-998a-5b81b3b30811",
          "scriptId": "95b15424-0a25-4fb7-b15e-569ddf411356",
          "execution": "fa3d1c8b-c658-4c87-8103-9f7745451d31"
        }
      },
      {
        "error": {
          "name": "Error",
          "message": "Invalid URI \"http:///%7B%7Bquote%7D%7D\"",
          "stack": "Error: Invalid URI \"http:///%7B%7Bquote%7D%7D\"\n    at Request.init (/home/projects/env/vng/node_modules/postman-request/request.js:343:31)\n    at new Request (/home/projects/env/vng/node_modules/postman-request/request.js:170:8)\n    at request (/home/projects/env/vng/node_modules/postman-request/index.js:47:10)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:74:23\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:473:16\n    at next (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5329:29)\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:969:16\n    at setCertificate (/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:40:20)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:69:13\n    at nextTask (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5324:14)\n    at next (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5331:9)\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:969:16\n    at setProxy (/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:21:9)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:66:13\n    at nextTask (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5324:14)\n    at Object.waterfall (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5334:5)",
          "checksum": "56c29b1a5b508419aba963e964b54b96",
          "id": "87c50526-d540-4159-b450-40e7022b6f71",
          "timestamp": 1563368725359,
          "stacktrace": [
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/request.js",
              "lineNumber": 343,
              "functionName": "Request.init",
              "typeName": "Request",
              "methodName": "init",
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/request.js",
              "lineNumber": 170,
              "functionName": "new Request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/index.js",
              "lineNumber": 47,
              "functionName": "request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 10,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 74,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 23,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 473,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5329,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 29,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 40,
              "functionName": "setCertificate",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 69,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5331,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 21,
              "functionName": "setProxy",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 66,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5334,
              "functionName": "Object.waterfall",
              "typeName": "Object",
              "methodName": "waterfall",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "68d8d1a4-a1b0-4bec-9dfd-c9771bd01a40",
          "name": "Pas een quote gedeeltelijk aan",
          "request": {
            "url": {
              "host": [
                "{{quote}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"tekst\": \"Deze quote is alleen in dit veld aangepast\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dc780489-1ebc-4517-b999-7cf543057b99",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Successful PATCH  request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                  "});"
                ],
                "_lastExecutionId": "3abfe43b-7556-477c-b8ee-beb3f57c8565"
              }
            }
          ]
        },
        "parent": {
          "id": "9c8bee3c-72fb-4f75-9314-19373fab6b90",
          "name": "part2",
          "item": [
            {
              "id": "0077dd66-4794-450e-b598-2888c1333059",
              "name": "Vervang quote in zijn geheel",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tekst\": \"Deze quote totaal vervangen\",\n    \"bronNaam\": \"Henri Korver\",\n    \"bronLink\": \"http://example.com\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "95b15424-0a25-4fb7-b15e-569ddf411356",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful PUT  request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                      "});",
                      "pm.test(\"Body matches string\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"Deze quote totaal vervange\");",
                      "});"
                    ],
                    "_lastExecutionId": "fa3d1c8b-c658-4c87-8103-9f7745451d31"
                  }
                }
              ]
            },
            {
              "id": "68d8d1a4-a1b0-4bec-9dfd-c9771bd01a40",
              "name": "Pas een quote gedeeltelijk aan",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"tekst\": \"Deze quote is alleen in dit veld aangepast\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dc780489-1ebc-4517-b999-7cf543057b99",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful PATCH  request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                      "});"
                    ],
                    "_lastExecutionId": "3abfe43b-7556-477c-b8ee-beb3f57c8565"
                  }
                }
              ]
            },
            {
              "id": "4e048e3f-c9a6-43c8-8d70-67436f0c759b",
              "name": "Verwijder een quote",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "591fd68f-84ab-4069-bf3e-fc788ea97906",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful DELETE request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([204]);",
                      "});"
                    ],
                    "_lastExecutionId": "dda6b022-da22-4e1b-9cf0-47b51a4cacc1"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "019b973c-b2de-4833-97f6-cbf4189095d2",
          "length": 7,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "bf949097-5581-408d-adf3-fec4398ff4aa"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Successful PATCH  request",
          "message": "expected undefined to be one of [ 200 ]",
          "stack": "AssertionError: expected undefined to be one of [ 200 ]\n   at Object.eval sandbox-script.js:1:6)",
          "checksum": "675a8300008329e1d40564c2a8c73d81",
          "id": "309c6c09-5c99-4458-9e23-240aa480f514",
          "timestamp": 1563368725368,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 6,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "68d8d1a4-a1b0-4bec-9dfd-c9771bd01a40",
          "name": "Pas een quote gedeeltelijk aan",
          "request": {
            "url": {
              "host": [
                "{{quote}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"tekst\": \"Deze quote is alleen in dit veld aangepast\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dc780489-1ebc-4517-b999-7cf543057b99",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Successful PATCH  request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                  "});"
                ],
                "_lastExecutionId": "3abfe43b-7556-477c-b8ee-beb3f57c8565"
              }
            }
          ]
        },
        "parent": {
          "id": "9c8bee3c-72fb-4f75-9314-19373fab6b90",
          "name": "part2",
          "item": [
            {
              "id": "0077dd66-4794-450e-b598-2888c1333059",
              "name": "Vervang quote in zijn geheel",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tekst\": \"Deze quote totaal vervangen\",\n    \"bronNaam\": \"Henri Korver\",\n    \"bronLink\": \"http://example.com\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "95b15424-0a25-4fb7-b15e-569ddf411356",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful PUT  request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                      "});",
                      "pm.test(\"Body matches string\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"Deze quote totaal vervange\");",
                      "});"
                    ],
                    "_lastExecutionId": "fa3d1c8b-c658-4c87-8103-9f7745451d31"
                  }
                }
              ]
            },
            {
              "id": "68d8d1a4-a1b0-4bec-9dfd-c9771bd01a40",
              "name": "Pas een quote gedeeltelijk aan",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"tekst\": \"Deze quote is alleen in dit veld aangepast\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dc780489-1ebc-4517-b999-7cf543057b99",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful PATCH  request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                      "});"
                    ],
                    "_lastExecutionId": "3abfe43b-7556-477c-b8ee-beb3f57c8565"
                  }
                }
              ]
            },
            {
              "id": "4e048e3f-c9a6-43c8-8d70-67436f0c759b",
              "name": "Verwijder een quote",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "591fd68f-84ab-4069-bf3e-fc788ea97906",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful DELETE request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([204]);",
                      "});"
                    ],
                    "_lastExecutionId": "dda6b022-da22-4e1b-9cf0-47b51a4cacc1"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "019b973c-b2de-4833-97f6-cbf4189095d2",
          "length": 7,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "bf949097-5581-408d-adf3-fec4398ff4aa",
          "scriptId": "dc780489-1ebc-4517-b999-7cf543057b99",
          "execution": "3abfe43b-7556-477c-b8ee-beb3f57c8565"
        }
      },
      {
        "error": {
          "name": "Error",
          "message": "Invalid URI \"http:///%7B%7Bquote%7D%7D\"",
          "stack": "Error: Invalid URI \"http:///%7B%7Bquote%7D%7D\"\n    at Request.init (/home/projects/env/vng/node_modules/postman-request/request.js:343:31)\n    at new Request (/home/projects/env/vng/node_modules/postman-request/request.js:170:8)\n    at request (/home/projects/env/vng/node_modules/postman-request/index.js:47:10)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:74:23\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:473:16\n    at next (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5329:29)\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:969:16\n    at setCertificate (/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:40:20)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:69:13\n    at nextTask (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5324:14)\n    at next (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5331:9)\n    at /home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:969:16\n    at setProxy (/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:21:9)\n    at /home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js:66:13\n    at nextTask (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5324:14)\n    at Object.waterfall (/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js:5334:5)",
          "checksum": "56c29b1a5b508419aba963e964b54b96",
          "id": "48b2797f-96bc-474f-bd38-456d6abd1422",
          "timestamp": 1563368725385,
          "stacktrace": [
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/request.js",
              "lineNumber": 343,
              "functionName": "Request.init",
              "typeName": "Request",
              "methodName": "init",
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/request.js",
              "lineNumber": 170,
              "functionName": "new Request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-request/index.js",
              "lineNumber": 47,
              "functionName": "request",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 10,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 74,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 23,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 473,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5329,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 29,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 40,
              "functionName": "setCertificate",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 69,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5331,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 969,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 21,
              "functionName": "setProxy",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/lib/requester/request-wrapper.js",
              "lineNumber": 66,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5324,
              "functionName": "nextTask",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "/home/projects/env/vng/node_modules/postman-runtime/node_modules/async/dist/async.js",
              "lineNumber": 5334,
              "functionName": "Object.waterfall",
              "typeName": "Object",
              "methodName": "waterfall",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "4e048e3f-c9a6-43c8-8d70-67436f0c759b",
          "name": "Verwijder een quote",
          "request": {
            "url": {
              "host": [
                "{{quote}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "591fd68f-84ab-4069-bf3e-fc788ea97906",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Successful DELETE request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([204]);",
                  "});"
                ],
                "_lastExecutionId": "dda6b022-da22-4e1b-9cf0-47b51a4cacc1"
              }
            }
          ]
        },
        "parent": {
          "id": "9c8bee3c-72fb-4f75-9314-19373fab6b90",
          "name": "part2",
          "item": [
            {
              "id": "0077dd66-4794-450e-b598-2888c1333059",
              "name": "Vervang quote in zijn geheel",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tekst\": \"Deze quote totaal vervangen\",\n    \"bronNaam\": \"Henri Korver\",\n    \"bronLink\": \"http://example.com\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "95b15424-0a25-4fb7-b15e-569ddf411356",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful PUT  request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                      "});",
                      "pm.test(\"Body matches string\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"Deze quote totaal vervange\");",
                      "});"
                    ],
                    "_lastExecutionId": "fa3d1c8b-c658-4c87-8103-9f7745451d31"
                  }
                }
              ]
            },
            {
              "id": "68d8d1a4-a1b0-4bec-9dfd-c9771bd01a40",
              "name": "Pas een quote gedeeltelijk aan",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"tekst\": \"Deze quote is alleen in dit veld aangepast\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dc780489-1ebc-4517-b999-7cf543057b99",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful PATCH  request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                      "});"
                    ],
                    "_lastExecutionId": "3abfe43b-7556-477c-b8ee-beb3f57c8565"
                  }
                }
              ]
            },
            {
              "id": "4e048e3f-c9a6-43c8-8d70-67436f0c759b",
              "name": "Verwijder een quote",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "591fd68f-84ab-4069-bf3e-fc788ea97906",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful DELETE request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([204]);",
                      "});"
                    ],
                    "_lastExecutionId": "dda6b022-da22-4e1b-9cf0-47b51a4cacc1"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "a641d818-06a7-4dd2-97b7-48d8cadbae4a",
          "length": 7,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e85cb2e8-dcde-4f26-aaa8-5c2c9cd42ccb"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Successful DELETE request",
          "message": "expected undefined to be one of [ 204 ]",
          "stack": "AssertionError: expected undefined to be one of [ 204 ]\n   at Object.eval sandbox-script.js:1:7)",
          "checksum": "1181bf70613a2b42f709e860dfe3be91",
          "id": "e16695f5-c9c1-46f0-8a7c-9a05ad837724",
          "timestamp": 1563368725395,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "4e048e3f-c9a6-43c8-8d70-67436f0c759b",
          "name": "Verwijder een quote",
          "request": {
            "url": {
              "host": [
                "{{quote}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "591fd68f-84ab-4069-bf3e-fc788ea97906",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Successful DELETE request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([204]);",
                  "});"
                ],
                "_lastExecutionId": "dda6b022-da22-4e1b-9cf0-47b51a4cacc1"
              }
            }
          ]
        },
        "parent": {
          "id": "9c8bee3c-72fb-4f75-9314-19373fab6b90",
          "name": "part2",
          "item": [
            {
              "id": "0077dd66-4794-450e-b598-2888c1333059",
              "name": "Vervang quote in zijn geheel",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"tekst\": \"Deze quote totaal vervangen\",\n    \"bronNaam\": \"Henri Korver\",\n    \"bronLink\": \"http://example.com\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "95b15424-0a25-4fb7-b15e-569ddf411356",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful PUT  request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                      "});",
                      "pm.test(\"Body matches string\", function () {",
                      "    pm.expect(pm.response.text()).to.include(\"Deze quote totaal vervange\");",
                      "});"
                    ],
                    "_lastExecutionId": "fa3d1c8b-c658-4c87-8103-9f7745451d31"
                  }
                }
              ]
            },
            {
              "id": "68d8d1a4-a1b0-4bec-9dfd-c9771bd01a40",
              "name": "Pas een quote gedeeltelijk aan",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Content-Type",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"tekst\": \"Deze quote is alleen in dit veld aangepast\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dc780489-1ebc-4517-b999-7cf543057b99",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful PATCH  request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200]);",
                      "});"
                    ],
                    "_lastExecutionId": "3abfe43b-7556-477c-b8ee-beb3f57c8565"
                  }
                }
              ]
            },
            {
              "id": "4e048e3f-c9a6-43c8-8d70-67436f0c759b",
              "name": "Verwijder een quote",
              "request": {
                "url": {
                  "host": [
                    "{{quote}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "591fd68f-84ab-4069-bf3e-fc788ea97906",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful DELETE request\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([204]);",
                      "});"
                    ],
                    "_lastExecutionId": "dda6b022-da22-4e1b-9cf0-47b51a4cacc1"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "a641d818-06a7-4dd2-97b7-48d8cadbae4a",
          "length": 7,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e85cb2e8-dcde-4f26-aaa8-5c2c9cd42ccb",
          "scriptId": "591fd68f-84ab-4069-bf3e-fc788ea97906",
          "execution": "dda6b022-da22-4e1b-9cf0-47b51a4cacc1"
        }
      }
    ],
    "error": null
  }
}