# Generated by Django 2.2.4 on 2019-09-19 14:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('servervalidation', '0077_merge_20190909_0947'),
    ]

    operations = [
        migrations.CreateModel(
            name='Environment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='', max_length=100)),
                ('test_scenario', models.ForeignKey(help_text='', on_delete=django.db.models.deletion.CASCADE, to='servervalidation.TestScenario')),
                ('user', models.ForeignKey(help_text='The user that created this environment', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True, editable=False, help_text='The universally unique identifier of this environment')),
            ],
            options={
                'unique_together': {('name', 'test_scenario')},
            },
        ),
        migrations.CreateModel(
            name='ScheduledTestScenario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True, editable=False, help_text='The universally unique identifier of this scheduled test scenario, needed to retrieve the badge')),
                ('environment', models.ForeignKey(blank=True, help_text='The environment that will be used for provider runs of this scheduled scenario', null=True, on_delete=django.db.models.deletion.PROTECT, to='servervalidation.Environment')),
                ('test_scenario', models.ForeignKey(help_text='The test scenario for which provider runs will be scheduled', on_delete=django.db.models.deletion.PROTECT, to='servervalidation.TestScenario')),
                ('user', models.ForeignKey(help_text='The user that scheduled this test scenario', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('test_scenario', 'user', 'environment')},
            },
        ),
        migrations.AddField(
            model_name='endpoint',
            name='environment',
            field=models.ForeignKey(blank=True, help_text='The environment to which this endpoint belongs', null=True, on_delete=django.db.models.deletion.CASCADE, to='servervalidation.Environment'),
        ),
        migrations.AddField(
            model_name='serverheader',
            name='environment',
            field=models.ForeignKey(blank=True, help_text='The environment to which this header belongs', null=True, on_delete=django.db.models.deletion.CASCADE, to='servervalidation.Environment'),
        ),
        migrations.AddField(
            model_name='serverrun',
            name='environment',
            field=models.ForeignKey(blank=True, help_text='The environment that will be used for this provider run', null=True, on_delete=django.db.models.deletion.PROTECT, to='servervalidation.Environment'),
        ),
        migrations.AddField(
            model_name='serverrun',
            name='scheduled_scenario',
            field=models.ForeignKey(blank=True, help_text='The scheduled test scenario for which this provider run was executed', null=True, on_delete=django.db.models.deletion.PROTECT, to='servervalidation.ScheduledTestScenario'),
        ),
    ]
